"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.symbol.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/es.weak-map.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.symbol.iterator.js");Object.defineProperty(exports, "__esModule", { value: true });exports.OverlayButton = exports.OverlayButtonBackgroundTypeContext = void 0;require("core-js/modules/es.object.keys.js");var _react = require("react");
var _styledComponents = _interopRequireDefault(require("styled-components"));

var _polished = require("polished");

var _theme = require("../../../lib/theme");
var _types = require("../../../lib/types");

var _spinner = require("../spinner");
var hideOutlineEventListeners = _interopRequireWildcard(require("./hideOutlineEventListeners"));
var _styleGenerators = require("./styleGenerators");var _jsxRuntime = require("react/jsx-runtime");function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}

var OverlayButtonBackgroundTypeContext = /*#__PURE__*/(0, _react.createContext)(_types.OverlayButtonBackgroundType.Mono);exports.OverlayButtonBackgroundTypeContext = OverlayButtonBackgroundTypeContext;

var SpinnerWrapper = _styledComponents.default.div.withConfig({ displayName: "overlayButton__SpinnerWrapper", componentId: "sc-1desygw-0" })(["position:absolute;top:0;right:0;bottom:0;left:0;display:flex;align-items:center;justify-content:center;"]);














var getContainerStyleGeneratorOptions = function getContainerStyleGeneratorOptions(_ref) {var backgroundType = _ref.backgroundType;
  var generateOptionsFromBaseColor = function generateOptionsFromBaseColor(baseColor) {
    return {
      contentColor: baseColor === 'white' ? 'white' : (0, _theme.cssVariables)('neutral-10'),
      disabledContentColor: (0, _polished.rgba)(baseColor, 0.32),
      bgColor: (0, _polished.rgba)(baseColor, 0.08),
      hoverBgColor: (0, _polished.rgba)(baseColor, 0.16),
      activeBgColor: (0, _polished.rgba)(baseColor, 0.12),
      pressedBgColor: (0, _polished.rgba)(baseColor, 0.12),
      disabledBgColor: (0, _polished.rgba)(baseColor, 0.08),
      borderColor: 'transparent',
      disabledBorderColor: 'transparent' };

  };
  switch (backgroundType) {
    case _types.OverlayButtonBackgroundType.Inverse:
      return generateOptionsFromBaseColor('white');
    case _types.OverlayButtonBackgroundType.Success:
      return generateOptionsFromBaseColor((0, _theme.cssColors)('green-6'));
    case _types.OverlayButtonBackgroundType.Danger:
      return generateOptionsFromBaseColor((0, _theme.cssColors)('red-6'));
    case _types.OverlayButtonBackgroundType.Warning:
      return generateOptionsFromBaseColor((0, _theme.cssColors)('yellow-6'));
    default:
      return generateOptionsFromBaseColor((0, _theme.cssColors)('neutral-6'));}

};

var StyledButton = _styledComponents.default.button.withConfig({ displayName: "overlayButton__StyledButton", componentId: "sc-1desygw-1" })([":disabled{cursor:", ";}", " ", " &[data-is-loading='true']{color:transparent !important;}"],

function (props) {return props.disabled && !props.isLoading ? 'not-allowed' : 'progress';},


function (props) {
  var styleGeneratorOptions = getContainerStyleGeneratorOptions(props);
  return (0, _styleGenerators.generateButtonContainerStyle)(styleGeneratorOptions);
},
(0, _styleGenerators.generateButtonSizeStyle)({ size: 'small' }));






var OverlayButton = /*#__PURE__*/(0, _react.forwardRef)(
function (_ref2, ref) {var isLoading = _ref2.isLoading,children = _ref2.children,_ref2$type = _ref2.type,type = _ref2$type === void 0 ? 'button' : _ref2$type,restProps = _objectWithoutProperties(_ref2, ["isLoading", "children", "type"]);
  var backgroundType = (0, _react.useContext)(OverlayButtonBackgroundTypeContext);

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsxs)(StyledButton, _objectSpread(_objectSpread(_objectSpread({
      ref: ref,
      type: type,
      backgroundType: backgroundType,
      "data-is-loading": isLoading },
    hideOutlineEventListeners),
    restProps), {}, { children: [

      isLoading && /*#__PURE__*/
      (0, _jsxRuntime.jsx)(SpinnerWrapper, { children: /*#__PURE__*/
        (0, _jsxRuntime.jsx)(_spinner.Spinner, {
          size: 20,
          stroke: backgroundType === _types.OverlayButtonBackgroundType.Inverse ? 'white' : (0, _theme.cssVariables)('purple-7') }) }),



      children] })));


});exports.OverlayButton = OverlayButton;