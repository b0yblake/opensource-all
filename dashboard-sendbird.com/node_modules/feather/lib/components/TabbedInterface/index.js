"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.array.slice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.object.keys.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.weak-map.js");Object.defineProperty(exports, "__esModule", { value: true });exports.TabbedInterface = exports.TabSize = void 0;require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.includes.js");require("core-js/modules/es.string.includes.js");var _react = _interopRequireWildcard(require("react"));









var _styledComponents = _interopRequireDefault(require("styled-components"));

var _animation = require("../../../lib/animation");
var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));
var _typography = require("../../../lib/typography");

var hideOutlineEventListeners = _interopRequireWildcard(require("../button/hideOutlineEventListeners"));var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}var





TabSize;exports.TabSize = TabSize;(function (TabSize) {TabSize["Large"] = "large";TabSize["Medium"] = "medium";})(TabSize || (exports.TabSize = TabSize = {}));





















var getTabId = function getTabId(id) {return "tab-".concat(id);};
var getTabPanelId = function getTabPanelId(id) {return "tabpanel-".concat(id);};

var TabList = _styledComponents.default.ul.withConfig({ displayName: "TabbedInterface__TabList", componentId: "sc-1kt3aqk-0" })(["display:flex;flex-direction:row;flex-wrap:nowrap;list-style:none;", " > * + *{margin-left:24px;}"],





function (_ref) {var $hasBorder = _ref.$hasBorder;return $hasBorder && "box-shadow: inset 0 -1px 0 0 ".concat((0, _cssVariables.default)('neutral-3'), ";");});






var Tab = _styledComponents.default.a.withConfig({ displayName: "TabbedInterface__Tab", componentId: "sc-1kt3aqk-1" })(["display:block;position:relative;transition:color 0.2s ", ";outline:0;padding:10px 0;text-decoration:none !important;white-space:nowrap;color:", ";&&{", "}&:not(:active):focus{box-shadow:0 0 0 2px ", ";}&::after{position:absolute;content:'';width:100%;height:2px;bottom:0;left:0;background-color:", ";transition:transform 0.2s ", ";transform:scaleX(0);transform-origin:0 0;}&:hover{color:", ";}&[aria-selected='true']{color:", ";&::after{transform:scaleX(1);}}&[aria-disabled='true']{color:", ";cursor:default;&::after{transform:scaleX(0);}}"],


_animation.transitionDefault,




(0, _cssVariables.default)('neutral-7'),



function (_ref2) {var $size = _ref2.$size;return $size === TabSize.Medium ? _typography.Headings['heading-01'] : _typography.Headings['heading-03'];},



(0, _cssVariables.default)('purple-7'),









(0, _cssVariables.default)('purple-7'),
_animation.transitionDefault,





(0, _cssVariables.default)('purple-7'),



(0, _cssVariables.default)('purple-7'),







(0, _cssVariables.default)('neutral-5'));








var Number = _styledComponents.default.span.withConfig({ displayName: "TabbedInterface__Number", componentId: "sc-1kt3aqk-2" })(["margin-left:8px;font-weight:400;"]);




var TabPanel = _styledComponents.default.section.withConfig({ displayName: "TabbedInterface__TabPanel", componentId: "sc-1kt3aqk-3" })(["&:focus{outline:0;}&[hidden]{display:none;}"]);









var TabbedInterface = /*#__PURE__*/_react.default.forwardRef(
function (_ref3,











ref)
{var className = _ref3.className,children = _ref3.children,tabs = _ref3.tabs,_ref3$initialActiveTa = _ref3.initialActiveTabIndex,initialActiveTabIndex = _ref3$initialActiveTa === void 0 ? 0 : _ref3$initialActiveTa,controlledActiveTabIndex = _ref3.activeTabIndex,_ref3$hasBorder = _ref3.hasBorder,hasBorder = _ref3$hasBorder === void 0 ? false : _ref3$hasBorder,onActiveTabChange = _ref3.onActiveTabChange,_ref3$size = _ref3.size,size = _ref3$size === void 0 ? TabSize.Medium : _ref3$size,_ref3$unmountInactive = _ref3.unmountInactiveTabPanels,unmountInactiveTabPanels = _ref3$unmountInactive === void 0 ? false : _ref3$unmountInactive;
  var _useState = (0, _react.useState)(initialActiveTabIndex),_useState2 = _slicedToArray(_useState, 2),localActiveTabIndex = _useState2[0],setLocalActiveTabIndex = _useState2[1];
  var activeTabIndex =
  typeof controlledActiveTabIndex === 'number' ? controlledActiveTabIndex : localActiveTabIndex;

  var previousActiveTabIndexRef = (0, _react.useRef)(activeTabIndex);
  var tabsRef = (0, _react.useRef)([]);
  var panelsRef = (0, _react.useRef)([]);

  var isControlled = typeof controlledActiveTabIndex === 'number';

  (0, _react.useEffect)(function () {
    tabsRef.current.length = tabs.length;
    panelsRef.current.length = tabs.length;
  }, [tabs.length]);

  (0, _react.useEffect)(function () {
    if (previousActiveTabIndexRef.current !== activeTabIndex) {var _tabsRef$current$acti;
      // Bypass initial render so that this runs only when activeTabIndex is actually changed.
      (_tabsRef$current$acti = tabsRef.current[activeTabIndex]) === null || _tabsRef$current$acti === void 0 ? void 0 : _tabsRef$current$acti.focus();
      previousActiveTabIndexRef.current = activeTabIndex;

      /**
       * Only run when the activeTabIndex is not controlled from outside of the component
       */
      if (!isControlled) {
        onActiveTabChange === null || onActiveTabChange === void 0 ? void 0 : onActiveTabChange({ tab: tabs[activeTabIndex], index: activeTabIndex });
      }
    }
  }, [activeTabIndex, isControlled, onActiveTabChange, tabs]);

  (0, _react.useImperativeHandle)(ref, function () {return {
      setActiveTabIndex: setLocalActiveTabIndex };});


  var updateActiveTabIndex = function updateActiveTabIndex(params) {
    if (isControlled) {
      onActiveTabChange === null || onActiveTabChange === void 0 ? void 0 : onActiveTabChange(params);
      return;
    }
    setLocalActiveTabIndex(params.index);
  };

  var handleClick =
  function handleClick(params) {return function (event) {
      event.preventDefault();

      if (!params.tab.disabled) {
        updateActiveTabIndex(params);
      }
    };};

  var renderTabPanel = (0, _react.useCallback)(
  function (tab, index) {
    if (!tab) return null;

    var id = tab.id;
    return /*#__PURE__*/(
      (0, _jsxRuntime.jsx)(TabPanel, {

        id: getTabPanelId(id),
        role: "tabpanel",
        "aria-labelledby": getTabId(id),
        tabIndex: -1,
        hidden: activeTabIndex !== index,
        ref: function ref(node) {
          panelsRef.current[index] = node;
        },
        onKeyDown: function onKeyDown(event) {var _tabsRef$current$acti2;
          switch (event.key) {
            case 'Up': // IE/Edge specific value
            case 'ArrowUp':
              (_tabsRef$current$acti2 = tabsRef.current[activeTabIndex]) === null || _tabsRef$current$acti2 === void 0 ? void 0 : _tabsRef$current$acti2.focus();
              break;
            default:
              break;}

        }, children:

        children(tab, index, activeTabIndex === index) }, "tabpanel-".concat(id)));


  },
  [activeTabIndex, children]);


  return /*#__PURE__*/(
    (0, _jsxRuntime.jsxs)("div", { className: className, children: [/*#__PURE__*/
      (0, _jsxRuntime.jsx)(TabList, { role: "tablist", $hasBorder: hasBorder, children:
        tabs.map(function (tab, index) {return /*#__PURE__*/(
            (0, _jsxRuntime.jsx)("li", { role: "presentation", children: /*#__PURE__*/
              (0, _jsxRuntime.jsxs)(Tab, _objectSpread(_objectSpread({
                id: getTabId(tab.id),
                role: "tab",
                href: getTabPanelId(tab.id),
                ref: function ref(node) {
                  tabsRef.current[index] = node;
                },
                tabIndex: activeTabIndex !== index || tab.disabled ? -1 : undefined,
                "aria-selected": activeTabIndex === index,
                "aria-disabled": tab.disabled,
                onClick: handleClick({ tab: tab, index: index }),
                onKeyDown: function onKeyDown(event) {var _panelsRef$current$in;
                  switch (event.key) {
                    case 'Down': // IE/Edge specific value
                    case 'ArrowDown':
                      (_panelsRef$current$in = panelsRef.current[index]) === null || _panelsRef$current$in === void 0 ? void 0 : _panelsRef$current$in.focus();
                      break;
                    case 'Left': // IE/Edge specific value
                    case 'Right': // IE/Edge specific value
                    case 'ArrowLeft':
                    case 'ArrowRight':
                      {
                        var direction = event.key.includes('Left') ? -1 : 1;
                        var currentTabIndex = index + direction;
                        while (
                        currentTabIndex >= 0 &&
                        currentTabIndex < tabs.length &&
                        tabs[currentTabIndex].disabled)
                        {
                          currentTabIndex += direction;
                        }

                        if (currentTabIndex >= 0 && currentTabIndex < tabs.length) {
                          updateActiveTabIndex({ tab: tabs[currentTabIndex], index: currentTabIndex });
                        }
                      }
                      break;
                    default:
                      break;}

                },
                $size: size },
              hideOutlineEventListeners), {}, { children: [

                tab.title,
                (typeof tab.number === 'number' || typeof tab.number === 'string') && /*#__PURE__*/
                (0, _jsxRuntime.jsxs)(Number, { children: ["(", String(tab.number), ")"] })] })) }, "tab-".concat(tab.id)));}) }),






      unmountInactiveTabPanels ? renderTabPanel(tabs[activeTabIndex], activeTabIndex) : tabs.map(renderTabPanel)] }));


});exports.TabbedInterface = TabbedInterface;