"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.object.keys.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.array.slice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.weak-map.js");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;require("core-js/modules/es.object.assign.js");require("core-js/modules/es.array.flat-map.js");require("core-js/modules/es.array.unscopables.flat-map.js");require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.concat.js");




var _styledComponents = _interopRequireWildcard(require("styled-components"));var _react = require("react");var _reactDom = require("react-dom");var _reactPopper = require("react-popper");var _reactTransitionGroup = require("react-transition-group");var _reactVirtual = require("react-virtual");

var _downshift = require("downshift");

var _icon = require("../../../lib/components/icon");
var _tooltip = require("../../../lib/components/tooltip");
var _elevation = require("../../../lib/elevation");
var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));










var _typography = require("../../../lib/typography");


var _constants = require("./constants");






var _styleGenerators = require("./styleGenerators");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArrayLimit(arr, i) {var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

var ChevronIcon = (0, _styledComponents.default)(_icon.Icon).withConfig({ displayName: "DropdownSelect__ChevronIcon", componentId: "sc-1ojbvov-0" })(["margin-left:4px;"]);



var Placeholder = _styledComponents.default.div.withConfig({ displayName: "DropdownSelect__Placeholder", componentId: "sc-1ojbvov-1" })(["white-space:nowrap;color:", ";"],

(0, _cssVariables.default)('neutral-6'));


var ToggleButtonContent = _styledComponents.default.div.withConfig({ displayName: "DropdownSelect__ToggleButtonContent", componentId: "sc-1ojbvov-2" })(["flex:1;text-align:left;white-space:nowrap;"]);





var toggleButtonStyles = {
  small: (0, _styledComponents.css)(["--height:32px;--padding-left:15px;--padding-right:11px;"]),




  medium: (0, _styledComponents.css)(["--height:40px;--padding-left:15px;--padding-right:11px;"]) };






var ToggleButton = _styledComponents.default.button.withConfig({ displayName: "DropdownSelect__ToggleButton", componentId: "sc-1ojbvov-3" })(["", ";align-items:center;background-color:", ";border-radius:4px;border:1px solid ", ";color:", ";cursor:pointer;display:flex;height:var(--height);min-width:80px;outline:0;padding-left:15px;padding-left:var(--padding-left);padding-right:11px;padding-right:var(--padding-right);padding:9px 11px 9px 15px;transition:", ";", ";", " &:disabled{", "}&:not(:disabled):active{", "}&:focus{box-shadow:0 0 0 2px ", ";}", ",", "{transition:", ";}", " ", ""],







function (props) {return toggleButtonStyles[props.$size];},


function (props) {return props.toggleColors.bgColor;},

function (props) {return props.toggleColors.borderColor;},
function (props) {return props.toggleColors.contentColor;},










_constants.defaultTransition.css,
_typography.Body['body-short-01'],

function (props) {return (
    props.variant === 'inline' && (0,
    _styledComponents.css)(["border:0;padding-left:calc(var(--padding-left) * 8 / 15);padding-right:calc(var(--padding-right) * 4 / 11);"]));},






function (_ref) {var $readOnly = _ref.$readOnly,toggleColors = _ref.toggleColors;return (
    $readOnly ? (0,
    _styledComponents.css)(["border:0;background:", ";cursor:text;color:", ";user-select:all;"],

    toggleColors.readOnlyBgColor,

    toggleColors.readOnlyContentColor) : (0,


    _styledComponents.css)(["border-color:", ";background:", ";cursor:not-allowed;color:", ";", "{color:", ";}", "{fill:", ";}"],
    toggleColors.disabledBorderColor,
    toggleColors.disabledBgColor,

    toggleColors.disabledContentColor,

    Placeholder,
    toggleColors.disabledContentColor,


    ChevronIcon,
    toggleColors.disabledContentColor));},





function (_ref2) {var toggleColors = _ref2.toggleColors;return (0, _styledComponents.css)(["border-color:", ";background:", ";color:", ";"],
  toggleColors.activeBorderColor,
  toggleColors.activeBgColor,
  toggleColors.activeContentColor);},




function (props) {return props.toggleColors.focusOutlineColor;},


Placeholder, ChevronIcon,
_constants.defaultTransition.css,


function (props) {return (
    props.hasError && (0,
    _styledComponents.css)(["border:1px solid ", ";"],
    (0, _cssVariables.default)('red-5')));},


function (_ref3) {var isOpen = _ref3.isOpen,toggleColors = _ref3.toggleColors;return (
    isOpen ? (0,
    _styledComponents.css)(["border-color:", ";background:", ";color:", ";", "{color:inherit;}", "{fill:currentColor;transform:rotate(180deg);}"],
    toggleColors.pressedBorderColor,
    toggleColors.pressedBgColor,
    toggleColors.pressedContentColor,

    Placeholder,



    ChevronIcon) : (0,




    _styledComponents.css)(["&:not(:disabled):hover{border-color:", ";background:", ";color:", ";", "{color:", ";}", "{fill:currentColor;}}"],

    toggleColors.hoverBorderColor,
    toggleColors.hoverBgColor,
    toggleColors.hoverContentColor,

    Placeholder,
    toggleColors.hoverContentColor,


    ChevronIcon));});






var OptionList = _styledComponents.default.ul.withConfig({ displayName: "DropdownSelect__OptionList", componentId: "sc-1ojbvov-4" })(["outline:0;padding:8px 0;min-width:168px;list-style-type:none;", ""],





function (props) {return (
    props.isMenuScrollable && (0,
    _styledComponents.css)(["max-height:320px;overflow-y:auto;"]));});





var VirtualizedOptionList = _styledComponents.default.ul.withConfig({ displayName: "DropdownSelect__VirtualizedOptionList", componentId: "sc-1ojbvov-5" })(["position:relative;outline:0;list-style-type:none;"]);var _StyledVirtualizedOptionList = (0, _styledComponents.default)(VirtualizedOptionList).withConfig({ displayName: "DropdownSelect___StyledVirtualizedOptionList", componentId: "sc-1ojbvov-6" })(["width:", "px;", ""], function (p) {return p._css;}, function (p) {return p._css2;});





var CheckIcon = (0, _styledComponents.default)(_icon.Icon).withConfig({ displayName: "DropdownSelect__CheckIcon", componentId: "sc-1ojbvov-7" })(["transition:", ";", ";"],
_constants.defaultTransition.css,

function (props) {return (
    props.isVisible ? (0,
    _styledComponents.css)(["width:20px;margin-left:8px;"]) : (0,



    _styledComponents.css)(["width:0;margin-left:0;"]));});





var OptionListItemContent = _styledComponents.default.div.withConfig({ displayName: "DropdownSelect__OptionListItemContent", componentId: "sc-1ojbvov-8" })(["display:flex;flex:1;align-items:center;"]);





var OptionListSeparator = Object.assign(
_styledComponents.default.li.withConfig({ displayName: "DropdownSelect__OptionListSeparator", componentId: "sc-1ojbvov-9" })(["background-image:linear-gradient(", ",", ");background-position:center;background-repeat:no-repeat;background-size:100% 1px;height:17px;"],
(0, _cssVariables.default)('neutral-3'), (0, _cssVariables.default)('neutral-3')),





{ height: 17 });


var OptionListItem = _styledComponents.default.li.withConfig({ displayName: "DropdownSelect__OptionListItem", componentId: "sc-1ojbvov-10" })(["display:flex;align-items:center;cursor:pointer;padding:6px 16px;color:", ";", ";&[disabled]{cursor:not-allowed;color:", ";}", " ", ""],




(0, _cssVariables.default)('neutral-10'),
_typography.Body['body-short-01'],



(0, _cssVariables.default)('neutral-5'),


function (props) {return (
    props.isHighlighted && (0,
    _styledComponents.css)(["background:", ";"],
    (0, _cssVariables.default)('neutral-1')));},


function (props) {return (
    props.isSelected && (0,
    _styledComponents.css)(["color:", ";transition:", ";"],
    (0, _cssVariables.default)('purple-7'),
    _constants.defaultTransition.css));});



var Popover = _styledComponents.default.div.withConfig({ displayName: "DropdownSelect__Popover", componentId: "sc-1ojbvov-11" })(["transition:", ";opacity:0;border-radius:4px;background:white;overflow:hidden;", ";&.display-enter{opacity:0;}&.display-enter-active,&.display-enter-done{", ";opacity:1;}&.display-exit{opacity:1;}&.display-exit-active{opacity:0;}"],
_constants.menuTransition.css,





function (props) {return (
    !props.showMenu && (0,
    _styledComponents.css)(["height:0;"]));},









_elevation.shadow[8]);












var Wrapper = _styledComponents.default.div.withConfig({ displayName: "DropdownSelect__Wrapper", componentId: "sc-1ojbvov-12" })(["display:flex;flex-direction:column;align-items:flex-start;", ""],




function (_ref4) {var $width = _ref4.$width;return (
    $width != null && (0,
    _styledComponents.css)(["width:", ";& > ", ",& > ", ",& > ", ",& > ", " > ", "{width:100%;}"],
    typeof $width === 'number' ? "".concat($width, "px") : $width,

    ToggleButton, Popover, _tooltip.TooltipReference, _tooltip.TooltipReference, ToggleButton));});





var Label = _styledComponents.default.label.withConfig({ displayName: "DropdownSelect__Label", componentId: "sc-1ojbvov-13" })(["display:block;margin-bottom:6px;color:", ";", ";", " ", ""],


(0, _cssVariables.default)('neutral-10'),
_typography.Typography['label-03'],

function (props) {return (
    props.isDisabled && (0,
    _styledComponents.css)(["color:", ";"],
    (0, _cssVariables.default)('neutral-5')));},


function (props) {return (
    props.isHidden && (0,
    _styledComponents.css)(["display:none;"]));});

























































var useRenderLabel = function useRenderLabel(_ref5) {var
  getLabelProps = _ref5.getLabelProps,
  label = _ref5.label,
  isHidden = _ref5.isHidden,
  disabled = _ref5.disabled;return (






    (0, _react.useCallback)(
    function () {return (
        label && /*#__PURE__*/
        (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, { children: /*#__PURE__*/

          (0, _jsxRuntime.jsx)(Label, _objectSpread(_objectSpread({ isDisabled: disabled, isHidden: isHidden }, getLabelProps()), {}, { children:
            label })) }));},



    [disabled, getLabelProps, isHidden, label]));};


var useRenderToggleButton =
function useRenderToggleButton(_ref6) {var
  disabled = _ref6.disabled,
  getToggleButtonProps = _ref6.getToggleButtonProps,
  hasError = _ref6.hasError,
  isOpen = _ref6.isOpen,
  readOnly = _ref6.readOnly,
  selectedItem = _ref6.selectedItem,
  showArrow = _ref6.showArrow,
  size = _ref6.size,
  toggleButtonProps = _ref6.toggleButtonProps,
  toggleButtonRef = _ref6.toggleButtonRef,
  toggleRenderer = _ref6.toggleRenderer,
  toggleTheme = _ref6.toggleTheme,
  tooltipProps = _ref6.tooltipProps,
  variant = _ref6.variant;return (















    function () {
      var toggleColors = (0, _styleGenerators.getToggleColors)(variant, toggleTheme);

      var _getToggleButtonProps = getToggleButtonProps(_objectSpread(_objectSpread({},
      toggleButtonProps), {}, {
        ref: toggleButtonRef,
        disabled: disabled || readOnly,
        onMouseDown: function onMouseDown(event) {var _toggleButtonProps$on;
          event.currentTarget.style.boxShadow = '';
          toggleButtonProps === null || toggleButtonProps === void 0 ? void 0 : (_toggleButtonProps$on = toggleButtonProps.onMouseDown) === null || _toggleButtonProps$on === void 0 ? void 0 : _toggleButtonProps$on.call(toggleButtonProps, event);
        },
        onFocus: function onFocus(event) {var _toggleButtonProps$on2;
          event.currentTarget.style.boxShadow = '';
          toggleButtonProps === null || toggleButtonProps === void 0 ? void 0 : (_toggleButtonProps$on2 = toggleButtonProps.onFocus) === null || _toggleButtonProps$on2 === void 0 ? void 0 : _toggleButtonProps$on2.call(toggleButtonProps, event);
        },
        onMouseUp: function onMouseUp(event) {var _toggleButtonProps$on3;
          event.currentTarget.style.boxShadow = 'none';
          toggleButtonProps === null || toggleButtonProps === void 0 ? void 0 : (_toggleButtonProps$on3 = toggleButtonProps.onMouseUp) === null || _toggleButtonProps$on3 === void 0 ? void 0 : _toggleButtonProps$on3.call(toggleButtonProps, event);
        } })),downshiftButtonRef = _getToggleButtonProps.ref,buttonProps = _objectWithoutProperties(_getToggleButtonProps, ["ref"]);


      var button = /*#__PURE__*/
      (0, _jsxRuntime.jsx)(_reactPopper.Reference, { innerRef: downshiftButtonRef, children:
        function children(_ref7) {var ref = _ref7.ref;return /*#__PURE__*/(
            (0, _jsxRuntime.jsxs)(ToggleButton, _objectSpread(_objectSpread({
              ref: ref,
              type: "button",
              isOpen: isOpen,
              $size: size,
              variant: variant,
              $readOnly: readOnly,
              toggleColors: toggleColors,
              hasError: hasError },
            buttonProps), {}, { children: [/*#__PURE__*/

              (0, _jsxRuntime.jsx)(ToggleButtonContent, { children: toggleRenderer({ selectedItem: selectedItem, isOpen: isOpen, hasError: hasError }) }),
              showArrow && /*#__PURE__*/
              (0, _jsxRuntime.jsx)(ChevronIcon, {
                size: 20,
                icon: "input-arrow-down",
                color: toggleColors.readOnlyArrowColor,
                "data-test-id": "Arrow" })] })));} });







      return tooltipProps ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_tooltip.Tooltip, _objectSpread(_objectSpread({}, tooltipProps), {}, { children: button })) : button;
    });};

var useRenderPopover =
function useRenderPopover(_ref8) {var
  isOpen = _ref8.isOpen,
  positionFixed = _ref8.positionFixed,
  placement = _ref8.placement,
  portalId = _ref8.portalId,
  onEnter = _ref8.onEnter,
  onExited = _ref8.onExited,
  showMenu = _ref8.showMenu;return (






    function (_children) {
      var popper = /*#__PURE__*/
      (0, _jsxRuntime.jsx)(_reactPopper.Popper, { positionFixed: positionFixed, placement: placement, children:
        function children(_ref9) {var ref = _ref9.ref,style = _ref9.style;return /*#__PURE__*/(
            (0, _jsxRuntime.jsx)(_reactTransitionGroup.CSSTransition, {
              in: isOpen,
              timeout: _constants.menuTransition.duration.milliseconds,
              classNames: "display",
              onEnter: onEnter,
              onExited: onExited, children: /*#__PURE__*/

              (0, _jsxRuntime.jsx)(Popover, { showMenu: showMenu, ref: ref, style: style, children:
                _children }) }));} });






      var portalContainer = portalId && document.getElementById(portalId);
      if (portalContainer) {
        return /*#__PURE__*/(0, _reactDom.createPortal)(popper, portalContainer);
      }
      return popper;
    });};

var useRenderMenuItem = function useRenderMenuItem(_ref10) {var
  getItemProps = _ref10.getItemProps,
  isItemDisabled = _ref10.isItemDisabled,
  itemToElement = _ref10.itemToElement;return (


    (0, _react.useCallback)(
    function (_ref11)













    {var item = _ref11.item,isHighlighted = _ref11.isHighlighted,isSelected = _ref11.isSelected,key = _ref11.key,index = _ref11.index,style = _ref11.style;
      return /*#__PURE__*/(
        (0, _jsxRuntime.jsxs)(OptionListItem, _objectSpread(_objectSpread({},
        getItemProps({ key: key, item: item, index: index, disabled: isItemDisabled === null || isItemDisabled === void 0 ? void 0 : isItemDisabled(item), style: style })), {}, {
          isHighlighted: isHighlighted,
          isSelected: isSelected, children: [/*#__PURE__*/

          (0, _jsxRuntime.jsx)(OptionListItemContent, { children: itemToElement(item, isSelected) }), /*#__PURE__*/
          (0, _jsxRuntime.jsx)(CheckIcon, { size: 20, color: (0, _cssVariables.default)('purple-7'), icon: "done", isVisible: isSelected })] })));


    },
    [getItemProps, isItemDisabled, itemToElement]));};


var useFlattenedItems = function useFlattenedItems(_ref12) {var
  items = _ref12.items,
  itemsType = _ref12.itemsType;return (




    (0, _react.useMemo)(function () {
      if (itemsType === 'section') {
        return items.flatMap(function (section) {return section.items;});
      }
      return items;
    }, [items, itemsType]));};

var useListItemElements = function useListItemElements(_ref13) {var
  items = _ref13.items,
  itemsType = _ref13.itemsType;return (




    (0, _react.useMemo)(function () {
      if (itemsType === 'section') {
        var _reduce = items.reduce(
        function (_ref14, section, sectionIndex, sections) {var result = _ref14.result,itemIndex = _ref14.itemIndex;
          result.push.apply(result, _toConsumableArray(
          section.items.map(function (item, index) {return {
              type: 'item',
              data: item,
              key: "".concat(sectionIndex, "-").concat(item).concat(index),
              index: itemIndex++ };})));


          if (sectionIndex < sections.length - 1) {
            result.push({ type: 'separator', key: "".concat(sectionIndex, "-separator"), index: -1 });
          }
          return { result: result, itemIndex: itemIndex };
        },
        { result: [], itemIndex: 0 }),result = _reduce.result;

        return result;
      }
      return items.map(function (item, index) {return { data: item, key: "".concat(item).concat(index), type: 'item', index: index };});
    }, [items, itemsType]));};

var useMenuVisibility = function useMenuVisibility() {
  var _useState = (0, _react.useState)(false),_useState2 = _slicedToArray(_useState, 2),showMenu = _useState2[0],setShowMenu = _useState2[1];
  var onMenuTransitionEnter = function onMenuTransitionEnter() {return setShowMenu(true);};
  var onMenuTransitionExited = function onMenuTransitionExited() {return setShowMenu(false);};

  return { showMenu: showMenu, setShowMenu: setShowMenu, onMenuTransitionEnter: onMenuTransitionEnter, onMenuTransitionExited: onMenuTransitionExited };
};

var DropdownSelectBase = function DropdownSelectBase(_ref15)





























{var className = _ref15.className,disabled = _ref15.disabled,emptyView = _ref15.emptyView,hasError = _ref15.hasError,initialSelectedItem = _ref15.initialSelectedItem,isItemDisabled = _ref15.isItemDisabled,isLabelHidden = _ref15.isLabelHidden,isMenuScrollable = _ref15.isMenuScrollable,_itemToString = _ref15.itemToString,itemToElement = _ref15.itemToElement,items = _ref15.items,itemsType = _ref15.itemsType,label = _ref15.label,onChange = _ref15.onChange,readOnly = _ref15.readOnly,selectedItemProp = _ref15.selectedItem,showArrow = _ref15.showArrow,size = _ref15.size,variant = _ref15.variant,toggleTheme = _ref15.toggleTheme,toggleButtonRef = _ref15.toggleButtonRef,toggleRenderer = _ref15.toggleRenderer,toggleButtonProps = _ref15.toggleButtonProps,width = _ref15.width,placement = _ref15.placement,positionFixed = _ref15.positionFixed,portalId = _ref15.portalId,tooltipProps = _ref15.tooltipProps,stateReducer = _ref15.stateReducer;
  var flattenedItems = useFlattenedItems({ items: items, itemsType: itemsType });
  var listItemElements = useListItemElements({ items: items, itemsType: itemsType });
  var _useMenuVisibility = useMenuVisibility(),showMenu = _useMenuVisibility.showMenu,onMenuTransitionEnter = _useMenuVisibility.onMenuTransitionEnter,onMenuTransitionExited = _useMenuVisibility.onMenuTransitionExited;

  var useSelectReturnValue = (0, _downshift.useSelect)(_objectSpread(_objectSpread({
    items: flattenedItems,
    initialSelectedItem: initialSelectedItem,
    itemToString: function itemToString(item) {return item == null ? '' : _itemToString(item);},
    onSelectedItemChange: function onSelectedItemChange(_ref16) {var selectedItem = _ref16.selectedItem;return onChange === null || onChange === void 0 ? void 0 : onChange(selectedItem || null);} },
  selectedItemProp !== undefined && { selectedItem: selectedItemProp }),
  stateReducer && { stateReducer: stateReducer }));


  var renderLabel = useRenderLabel(_objectSpread(_objectSpread({}, useSelectReturnValue), {}, { label: label, isHidden: isLabelHidden, disabled: disabled }));
  var renderToggleButton = useRenderToggleButton(_objectSpread(_objectSpread({},
  useSelectReturnValue), {}, {
    disabled: disabled,
    hasError: hasError,
    readOnly: readOnly,
    showArrow: showArrow,
    size: size,
    toggleButtonProps: toggleButtonProps,
    toggleButtonRef: toggleButtonRef,
    toggleRenderer: toggleRenderer,
    toggleTheme: toggleTheme,
    tooltipProps: tooltipProps,
    variant: variant }));


  var renderPopover = useRenderPopover(_objectSpread(_objectSpread({},
  useSelectReturnValue), {}, {
    positionFixed: positionFixed,
    placement: placement,
    portalId: portalId,
    onEnter: onMenuTransitionEnter,
    onExited: onMenuTransitionExited,
    showMenu: showMenu }));


  var getItemProps = useSelectReturnValue.getItemProps,getMenuProps = useSelectReturnValue.getMenuProps,highlightedIndex = useSelectReturnValue.highlightedIndex,selectedItem = useSelectReturnValue.selectedItem;
  var renderMenuItem = useRenderMenuItem({ getItemProps: getItemProps, isItemDisabled: isItemDisabled, itemToElement: itemToElement });

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(Wrapper, { className: className, $width: width, children: /*#__PURE__*/
      (0, _jsxRuntime.jsxs)(_reactPopper.Manager, { children: [
        renderLabel(),
        renderToggleButton(),
        renderPopover( /*#__PURE__*/
        (0, _jsxRuntime.jsx)(OptionList, _objectSpread(_objectSpread({}, getMenuProps()), {}, { isMenuScrollable: isMenuScrollable, children:
          showMenu && (
          listItemElements.length > 0 ?
          listItemElements.map(function (item) {
            if (item.type === 'separator') {
              return /*#__PURE__*/(0, _jsxRuntime.jsx)(OptionListSeparator, { role: "presentation" }, item.key);
            }
            var data = item.data,key = item.key,index = item.index;
            return renderMenuItem({
              isHighlighted: highlightedIndex === index,
              isSelected: selectedItem === data,
              item: data,
              key: key,
              index: index });

          }) : /*#__PURE__*/

          (0, _jsxRuntime.jsx)("li", { role: "presentation", children: emptyView })) })))] }) }));






};

var DropdownSelectVirtualized = function DropdownSelectVirtualized(_ref17)





























{var className = _ref17.className,disabled = _ref17.disabled,emptyView = _ref17.emptyView,hasError = _ref17.hasError,initialSelectedItem = _ref17.initialSelectedItem,isItemDisabled = _ref17.isItemDisabled,isLabelHidden = _ref17.isLabelHidden,_itemToString2 = _ref17.itemToString,itemToElement = _ref17.itemToElement,items = _ref17.items,itemsType = _ref17.itemsType,label = _ref17.label,onChange = _ref17.onChange,readOnly = _ref17.readOnly,selectedItemProp = _ref17.selectedItem,showArrow = _ref17.showArrow,size = _ref17.size,variant = _ref17.variant,toggleTheme = _ref17.toggleTheme,toggleButtonRef = _ref17.toggleButtonRef,toggleRenderer = _ref17.toggleRenderer,toggleButtonProps = _ref17.toggleButtonProps,width = _ref17.width,placement = _ref17.placement,positionFixed = _ref17.positionFixed,portalId = _ref17.portalId,tooltipProps = _ref17.tooltipProps,_ref17$virtualListOpt = _ref17.virtualListOptions,listWidth = _ref17$virtualListOpt.width,itemHeight = _ref17$virtualListOpt.itemHeight,stateReducer = _ref17.stateReducer;
  var flattenedItems = useFlattenedItems({ items: items, itemsType: itemsType });
  var listItemElements = useListItemElements({ items: items, itemsType: itemsType });
  var parentRef = (0, _react.useRef)(null);
  var _useMenuVisibility2 = useMenuVisibility(),showMenu = _useMenuVisibility2.showMenu,onMenuTransitionEnter = _useMenuVisibility2.onMenuTransitionEnter,onMenuTransitionExited = _useMenuVisibility2.onMenuTransitionExited;

  var getListItemHeight = (0, _react.useCallback)(
  function (_ref18) {var type = _ref18.type;return type === 'separator' ? OptionListSeparator.height : itemHeight;},
  [itemHeight]);


  var rowVirtualizer = (0, _reactVirtual.useVirtual)({
    size: listItemElements.length,
    parentRef: parentRef,
    estimateSize: (0, _react.useCallback)(
    function (index) {return getListItemHeight(listItemElements[index]);},
    [getListItemHeight, listItemElements]),

    overscan: 5,
    paddingStart: _constants.MENU_SCROLLBAR_VERTICAL_PADDING,
    paddingEnd: _constants.MENU_SCROLLBAR_VERTICAL_PADDING });


  var useSelectReturnValue = (0, _downshift.useSelect)(_objectSpread(_objectSpread({
    items: flattenedItems,
    initialSelectedItem: initialSelectedItem,
    itemToString: function itemToString(item) {return item == null ? '' : _itemToString2(item);},
    onSelectedItemChange: function onSelectedItemChange(_ref19) {var selectedItem = _ref19.selectedItem;return onChange === null || onChange === void 0 ? void 0 : onChange(selectedItem || null);},
    onHighlightedIndexChange: function onHighlightedIndexChange(_ref20) {var highlightedIndex = _ref20.highlightedIndex;
      highlightedIndex != null && highlightedIndex >= 0 && rowVirtualizer.scrollToIndex(highlightedIndex);
    } },
  selectedItemProp != null && { selectedItem: selectedItemProp }),
  stateReducer && { stateReducer: stateReducer }));


  var renderLabel = useRenderLabel(_objectSpread(_objectSpread({}, useSelectReturnValue), {}, { label: label, isHidden: isLabelHidden, disabled: disabled }));
  var renderToggleButton = useRenderToggleButton(_objectSpread(_objectSpread({},
  useSelectReturnValue), {}, {
    disabled: disabled,
    hasError: hasError,
    readOnly: readOnly,
    showArrow: showArrow,
    size: size,
    toggleButtonProps: toggleButtonProps,
    toggleButtonRef: toggleButtonRef,
    toggleRenderer: toggleRenderer,
    toggleTheme: toggleTheme,
    tooltipProps: tooltipProps,
    variant: variant }));


  var renderPopover = useRenderPopover(_objectSpread(_objectSpread({},
  useSelectReturnValue), {}, {
    positionFixed: positionFixed,
    placement: placement,
    portalId: portalId,
    onEnter: onMenuTransitionEnter,
    onExited: onMenuTransitionExited,
    showMenu: showMenu }));


  var listHeight = rowVirtualizer.totalSize;

  var getItemProps = useSelectReturnValue.getItemProps,getMenuProps = useSelectReturnValue.getMenuProps,highlightedIndex = useSelectReturnValue.highlightedIndex,selectedItem = useSelectReturnValue.selectedItem;
  var renderMenuItem = useRenderMenuItem({ getItemProps: getItemProps, isItemDisabled: isItemDisabled, itemToElement: itemToElement });

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(Wrapper, { className: className, $width: width, children: /*#__PURE__*/
      (0, _jsxRuntime.jsxs)(_reactPopper.Manager, { children: [
        renderLabel(),
        renderToggleButton(),
        renderPopover( /*#__PURE__*/
        (0, _jsxRuntime.jsx)(_StyledVirtualizedOptionList, _objectSpread(_objectSpread({},
        getMenuProps({ ref: parentRef })), {}, { _css:

          listWidth, _css2:
          listItemElements.length > 0 && (0,
          _styledComponents.css)(["height:", "px;overflow:auto;"],
          Math.min(320, listHeight)), children:




          showMenu && (
          listItemElements.length > 0 ? /*#__PURE__*/
          (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, { children: [/*#__PURE__*/
            (0, _jsxRuntime.jsx)("li", { style: { height: listHeight }, role: "presentation" }, "total-size"),
            rowVirtualizer.virtualItems.map(function (virtualRow) {
              var item = listItemElements[virtualRow.index];
              var style = {
                position: 'absolute',
                top: 0,
                left: 0,
                width: '100%',
                height: "".concat(virtualRow.size, "px"),
                transform: "translateY(".concat(virtualRow.start, "px)") };


              if (item.type === 'separator') {
                return /*#__PURE__*/(0, _jsxRuntime.jsx)(OptionListSeparator, { role: "presentation", style: style }, item.key);
              }
              var data = item.data,key = item.key,index = item.index;
              return renderMenuItem({
                isHighlighted: highlightedIndex === index,
                isSelected: selectedItem === data,
                item: data,
                key: key,
                index: index,
                style: style });

            })] }) : /*#__PURE__*/


          (0, _jsxRuntime.jsx)("li", { role: "presentation", children: emptyView })) })))] }) }));






};

var DropdownSelect = function DropdownSelect(_ref21)



















{var _ref21$disabled = _ref21.disabled,disabled = _ref21$disabled === void 0 ? false : _ref21$disabled,_ref21$emptyView = _ref21.emptyView,emptyView = _ref21$emptyView === void 0 ? _constants.defaultEmptyView : _ref21$emptyView,_ref21$hasError = _ref21.hasError,hasError = _ref21$hasError === void 0 ? false : _ref21$hasError,_ref21$isLabelHidden = _ref21.isLabelHidden,isLabelHidden = _ref21$isLabelHidden === void 0 ? false : _ref21$isLabelHidden,_ref21$isMenuScrollab = _ref21.isMenuScrollable,isMenuScrollable = _ref21$isMenuScrollab === void 0 ? true : _ref21$isMenuScrollab,_ref21$itemToString = _ref21.itemToString,itemToString = _ref21$itemToString === void 0 ? _constants.defaultItemToString : _ref21$itemToString,_ref21$itemToElement = _ref21.itemToElement,itemToElement = _ref21$itemToElement === void 0 ? itemToString : _ref21$itemToElement,_ref21$itemsType = _ref21.itemsType,itemsType = _ref21$itemsType === void 0 ? 'array' : _ref21$itemsType,_ref21$readOnly = _ref21.readOnly,readOnly = _ref21$readOnly === void 0 ? false : _ref21$readOnly,_ref21$showArrow = _ref21.showArrow,showArrow = _ref21$showArrow === void 0 ? true : _ref21$showArrow,_ref21$size = _ref21.size,size = _ref21$size === void 0 ? 'medium' : _ref21$size,_ref21$variant = _ref21.variant,variant = _ref21$variant === void 0 ? 'default' : _ref21$variant,placeholder = _ref21.placeholder,_ref21$toggleRenderer = _ref21.toggleRenderer,toggleRenderer = _ref21$toggleRenderer === void 0 ? function (_ref22) {var selectedItem = _ref22.selectedItem;return selectedItem == null ? /*#__PURE__*/(0, _jsxRuntime.jsx)(Placeholder, { children: placeholder }) : itemToString(selectedItem);} : _ref21$toggleRenderer,_ref21$placement = _ref21.placement,placement = _ref21$placement === void 0 ? 'bottom-start' : _ref21$placement,_ref21$positionFixed = _ref21.positionFixed,positionFixed = _ref21$positionFixed === void 0 ? false : _ref21$positionFixed,virtualListOptions = _ref21.virtualListOptions,props = _objectWithoutProperties(_ref21, ["disabled", "emptyView", "hasError", "isLabelHidden", "isMenuScrollable", "itemToString", "itemToElement", "itemsType", "readOnly", "showArrow", "size", "variant", "placeholder", "toggleRenderer", "placement", "positionFixed", "virtualListOptions"]);
  var propsWithDefaultPropValues = {
    disabled: disabled,
    emptyView: emptyView,
    hasError: hasError,
    isLabelHidden: isLabelHidden,
    isMenuScrollable: isMenuScrollable,
    itemToString: itemToString,
    itemToElement: itemToElement,
    itemsType: itemsType,
    readOnly: readOnly,
    showArrow: showArrow,
    size: size,
    variant: variant,
    toggleRenderer: toggleRenderer,
    placement: placement,
    positionFixed: positionFixed };


  return virtualListOptions ? /*#__PURE__*/
  (0, _jsxRuntime.jsx)(DropdownSelectVirtualized, _objectSpread(_objectSpread({ virtualListOptions: virtualListOptions }, propsWithDefaultPropValues), props)) : /*#__PURE__*/

  (0, _jsxRuntime.jsx)(DropdownSelectBase, _objectSpread(_objectSpread({}, propsWithDefaultPropValues), props));

};

DropdownSelect.stateChangeTypes = _downshift.useSelect.stateChangeTypes;var _default =

DropdownSelect;exports.default = _default;