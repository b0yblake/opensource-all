"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.object.keys.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.weak-map.js");Object.defineProperty(exports, "__esModule", { value: true });exports.isColumnsEqual = isColumnsEqual;exports.Table = Table;require("core-js/modules/es.number.constructor.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.find.js");require("core-js/modules/es.array.concat.js");require("core-js/modules/es.array.includes.js");require("core-js/modules/es.string.includes.js");require("core-js/modules/es.array.slice.js");var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));

var _typography = require("../../../lib/typography");
var _useOnChangeTrigger = require("../../../lib/utils/useOnChangeTrigger");
var _warningOnce = require("../../../lib/utils/warningOnce");

var _button = require("../button");
var _checkbox = require("../checkbox");
var _OverflowMenu = require("../OverflowMenu");
var _ScrollBar = require("../ScrollBar");
var _sortOrderIndicator = require("../sortOrderIndicator");
var _spinner = require("../spinner");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}

var sortDirections = ['ascend', 'descend'];



var selectionColumnKey = 'selection-column';
var headerRowHeight = 40;
var footerHeight = 56;
var rowHeight = 64;

var hideScrollbarStyles = (0, _styledComponents.css)(["scrollbar-width:none;-ms-overflow-style:none;&::-webkit-scrollbar{width:0 !important;height:0 !important;}"]);








var ColumnTitle = _styledComponents.default.span.withConfig({ displayName: "table__ColumnTitle", componentId: "dhn9jj-0" })([""]);

var Container = _styledComponents.default.div.withConfig({ displayName: "table__Container", componentId: "dhn9jj-1" })(["display:flex;flex-direction:column;position:relative;min-height:0;background-color:#fff;font-size:14px;line-height:20px;color:", ";"],









(0, _cssVariables.default)('neutral-10'));


var StyledSortOrderIndicator = (0, _styledComponents.default)(_sortOrderIndicator.SortOrderIndicator).withConfig({ displayName: "table__StyledSortOrderIndicator", componentId: "dhn9jj-2" })(["margin-left:4px;", ""],

function (props) {return props.order === undefined && 'opacity: 0;';});


var RowActionsContainer = _styledComponents.default.td.withConfig({ displayName: "table__RowActionsContainer", componentId: "dhn9jj-3" })(["&&&&{position:absolute;right:0;top:6px;display:grid;grid-gap:4px;grid-auto-flow:column;align-content:start;padding:0 8px;margin:0 !important;}"]);














var FooterWrapper = _styledComponents.default.div.withConfig({ displayName: "table__FooterWrapper", componentId: "dhn9jj-4" })(["bottom:0;left:0;right:0;flex:none;display:flex;flex-direction:row;align-items:center;height:", "px;background:#fff;border-top:1px solid ", ";padding-left:14px;padding-right:14px;"],








footerHeight,

(0, _cssVariables.default)('neutral-3'));




var tableRowPadding = function tableRowPadding(props) {
  switch (props.density) {
    case 'compact':
      return 8;
    case 'large':
      return 16;
    default:
      return 12;}

};

var TableElement = _styledComponents.default.table.withConfig({ displayName: "table__TableElement", componentId: "dhn9jj-5" })(["display:flex;flex-direction:column;flex-wrap:nowrap;align-items:stretch;", " width:100%;min-height:0;border-collapse:collapse;thead,tbody{width:100%;display:flex;flex-direction:column;align-items:stretch;flex-wrap:nowrap;}tr{width:100%;display:flex;flex-direction:row;justify-content:stretch;align-items:stretch;flex-wrap:nowrap;border-top:1px solid ", ";}th,td{display:flex;flex-direction:row;align-items:flex-start;margin:0 8px;&[data-is-selection-column='true']{flex:initial;width:22px;text-align:center;justify-content:center;margin-left:8px;margin-right:12px;}&:hover ", "{opacity:1;}}thead{top:0;z-index:1;tr{border-top:none;height:", "px;}th,td{align-items:center;padding:12px 0;font-size:13px;font-weight:600;line-height:16px;height:", "px;color:", ";}}tbody{border-top:1px solid ", ";border-bottom:1px solid ", ";tr{&:hover{background-color:", ";border-top:1px solid transparent;& + tr{border-top:1px solid transparent;}}}tr:first-child{border-top:0;}td{padding-top:", "px;padding-bottom:", "px;}}"],






function (props) {return props.hasFooter && 'flex: 1;';},























(0, _cssVariables.default)('neutral-3'),


















StyledSortOrderIndicator,










headerRowHeight,









headerRowHeight - 1,
(0, _cssVariables.default)('neutral-10'),




(0, _cssVariables.default)('neutral-3'),
(0, _cssVariables.default)('neutral-3'),



(0, _cssVariables.default)('neutral-1'),













tableRowPadding,
tableRowPadding);




var TableRow = _styledComponents.default.tr.withConfig({ displayName: "table__TableRow", componentId: "dhn9jj-6" })(["position:relative;", " ", " ", ""],

function (props) {return props.isSelected && "background-color: ".concat((0, _cssVariables.default)('neutral-2'), ";");},
function (props) {return (
    props.disabled && "\n      td {\n        color: ".concat(


    (0, _cssVariables.default)('neutral-5'), ";\n      }\n    "));},


function (props) {return (
    props.styles && (0,
    _styledComponents.css)(["&&&{", "}"],

    props.styles));});




var Cell = _styledComponents.default.td.withConfig({ displayName: "table__Cell", componentId: "dhn9jj-7" })(["min-width:0;text-overflow:ellipsis;overflow:scroll;", " text-align:", ";", " ", " ", ""],









hideScrollbarStyles,

function (props) {return props.align;},
function (props) {return props.isClickable && 'cursor: pointer;';},
function (_ref) {var flex = _ref.flex,width = _ref.width;
  if (flex !== undefined) {
    return "flex: ".concat(flex, " 0;");
  }
  if (typeof width === 'number') {
    return "width: ".concat(width, "px;");
  }
  if (width !== undefined) {
    return "width: ".concat(width, ";");
  }
  return 'flex: 1 0;';
},

function (props) {return (
    props.styles && (0,
    _styledComponents.css)(["&&&{", "}"],

    props.styles));});




var EmptyViewWrapper = _styledComponents.default.tr.withConfig({ displayName: "table__EmptyViewWrapper", componentId: "dhn9jj-8" })(["border-bottom:0 !important;background-color:transparent !important;td{width:100%;height:initial !important;min-height:", "px;}"],






rowHeight - 1);



var BatchActionsContainer = _styledComponents.default.div.withConfig({ displayName: "table__BatchActionsContainer", componentId: "dhn9jj-9" })(["display:flex;flex-direction:row;align-items:center;margin-left:-4px;button{min-width:0;margin-right:8px;}"]);











var SelectedRowCount = _styledComponents.default.div.withConfig({ displayName: "table__SelectedRowCount", componentId: "dhn9jj-10" })(["margin-right:18px;", ""],

_typography.Headings['heading-02']);


function isColumnsEqual(aColumn, otherColumn) {
  if (!aColumn || !otherColumn) {
    return false;
  }
  if (aColumn.key && otherColumn.key) {
    return aColumn.key === otherColumn.key;
  }
  if (aColumn.dataIndex && otherColumn.dataIndex) {
    return aColumn.dataIndex === otherColumn.dataIndex;
  }
  if (aColumn.title && otherColumn.title) {
    return aColumn.title === otherColumn.title;
  }
  return false;
}

function Table(_ref2)
















{var columns = _ref2.columns,_ref2$dataSource = _ref2.dataSource,dataSource = _ref2$dataSource === void 0 ? [] : _ref2$dataSource,_ref2$rowKey = _ref2.rowKey,rowKey = _ref2$rowKey === void 0 ? 'key' : _ref2$rowKey,rowSelection = _ref2.rowSelection,_ref2$loading = _ref2.loading,loading = _ref2$loading === void 0 ? false : _ref2$loading,rowStyles = _ref2.rowStyles,emptyView = _ref2.emptyView,onRow = _ref2.onRow,onSortByUpdated = _ref2.onSortByUpdated,className = _ref2.className,_ref2$showScrollbars = _ref2.showScrollbars,showScrollbars = _ref2$showScrollbars === void 0 ? false : _ref2$showScrollbars,scrollBarRef = _ref2.scrollBarRef,footer = _ref2.footer,_ref2$rowActions = _ref2.rowActions,propRowActions = _ref2$rowActions === void 0 ? function () {return [];} : _ref2$rowActions,_ref2$density = _ref2.density,density = _ref2$density === void 0 ? 'default' : _ref2$density,_ref2$batchActions = _ref2.batchActions,batchActions = _ref2$batchActions === void 0 ? [] : _ref2$batchActions;
  var _useState = (0, _react.useState)([]),_useState2 = _slicedToArray(_useState, 2),internalSelectedRowKeys = _useState2[0],setInternalSelectedRowKeys = _useState2[1];
  var _useState3 = (0, _react.useState)(undefined),_useState4 = _slicedToArray(_useState3, 2),sortOrder = _useState4[0],setSortOrder = _useState4[1];
  var _useState5 = (0, _react.useState)(undefined),_useState6 = _slicedToArray(_useState5, 2),sortColumn = _useState6[0],setSortColumn = _useState6[1];
  var tableBodyElementRef = (0, _react.useRef)(null);

  /**
   * True if `rowSelection.selectedRowKeys` is defined.
   * if it is true, Table doesn't use `selectedRowKeys` state but `rowSelection.selectedRowKeys` prop
   */
  var isSelectionControlled = !!(rowSelection && rowSelection.selectedRowKeys);

  var selectedRowKeys = isSelectionControlled ? rowSelection.selectedRowKeys : internalSelectedRowKeys;

  /**
   * If a compare function is not given for a column, use this function for the column
   *
   * @param a value of the column of a row
   * @param b value of the column of another row
   * @param {SortOrder} sortOrder sort order
   * @returns positive number if a precedes b, negative number if a succeeds b
   */
  var defaultCompareFn = function defaultCompareFn(a, b, sortOrder) {
    var directionFactor = sortOrder === 'descend' ? -1 : 1;

    if (typeof a === 'number' && typeof b === 'number') {
      return (a - b) * directionFactor;
    }
    if (typeof a === 'boolean' && typeof b === 'boolean') {
      return (Number(b) - Number(a)) * directionFactor;
    }
    return String(a).localeCompare(String(b)) * directionFactor;
  };

  /** Columns with `defaultSortOrder` defined */
  var defaultSortedColumns = columns.filter(function (column) {return column.defaultSortOrder !== undefined;});

  var sortBy = (0, _react.useMemo)(function () {return { sortColumn: sortColumn, sortOrder: sortOrder };}, [sortColumn, sortOrder]);
  (0, _useOnChangeTrigger.useOnChangeTrigger)(sortBy, function (_ref3) {var sortColumn = _ref3.sortColumn,sortOrder = _ref3.sortOrder;return onSortByUpdated === null || onSortByUpdated === void 0 ? void 0 : onSortByUpdated(sortColumn, sortOrder);});

  (0, _react.useEffect)(function () {
    if (sortOrder && sortColumn) {
      return;
    }

    if (defaultSortedColumns.length > 0) {
      setSortOrder(defaultSortedColumns[0].defaultSortOrder);
      setSortColumn(defaultSortedColumns[0]);
    }
  }, [defaultSortedColumns, sortColumn, sortOrder]);

  var sortedDataSource = (0, _react.useMemo)(function () {
    if (!sortOrder || !sortColumn || onSortByUpdated != null) {
      return dataSource;
    }
    var sortColumnKey = sortColumn.dataIndex;
    if (!sortColumnKey) {
      return dataSource;
    }

    return _toConsumableArray(dataSource).sort(function (a, b) {
      // compare the values of the sort columns of two rows
      var compareFnReturnValue =
      typeof sortColumn.sorter === 'function' ?
      sortColumn.sorter(a, b, sortOrder) :
      defaultCompareFn(a[sortColumnKey], b[sortColumnKey], sortOrder);

      if (compareFnReturnValue !== 0) {
        return compareFnReturnValue;
      }

      // if two values are equal, compare the rest columns from the first one
      for (var i = 0; i < columns.length; i++) {
        var column = columns[i];
        var _compareFnReturnValue =
        typeof column.sorter === 'function' ?
        column.sorter(a, b, column.defaultSortOrder) :
        defaultCompareFn(a[sortColumnKey], b[sortColumnKey], column.defaultSortOrder);
        if (_compareFnReturnValue !== 0) {
          return _compareFnReturnValue;
        }
      }

      return 0;
    });
  }, [sortOrder, sortColumn, onSortByUpdated, dataSource, columns]);

  /**
   * Get the key of a table record
   *
   * @param {TableRecord} record table record
   * @returns the key of the record
   */
  var getRowKey = (0, _react.useCallback)(
  function (record) {
    var recordKey = record[rowKey];
    (0, _warningOnce.warningOnce)(
    recordKey !== undefined,
    'Each record in dataSource of table should have a unique `key` prop, or set `rowKey` of Table to an unique primary key,');

    return recordKey;
  },
  [rowKey]);


  var notifyNewSelection = (0, _react.useCallback)(
  function (selectedRowKeys) {
    if (!rowSelection) {
      return;
    }

    if (!isSelectionControlled) {
      setInternalSelectedRowKeys(selectedRowKeys);
    }
    if (rowSelection.onChange) {
      var records;
      if (selectedRowKeys.length === 0) {
        records = [];
      } else if (selectedRowKeys.length === dataSource.length) {
        records = dataSource;
      } else {
        records = selectedRowKeys.
        map(function (rowKey) {return dataSource.find(function (record) {return rowKey === getRowKey(record);});}).
        filter(function (record) {return record;});
      }
      rowSelection.onChange(selectedRowKeys, records);
    }
  },
  [dataSource, getRowKey, isSelectionControlled, rowSelection]);


  var onRecordSelectionChange = (0, _react.useCallback)(
  function (rowKey) {return (
      function (_ref4) {var target = _ref4.target;
        if (!rowSelection) {
          return;
        }

        notifyNewSelection(
        target.checked ? [].concat(_toConsumableArray(selectedRowKeys), [rowKey]) : selectedRowKeys.filter(function (key) {return key !== rowKey;}));

      });},
  [notifyNewSelection, rowSelection, selectedRowKeys]);


  var renderCheckbox = function renderCheckbox(record) {
    var rowKey = getRowKey(record);
    var checked = selectedRowKeys.includes(rowKey);
    var checkboxProps = rowSelection && rowSelection.getCheckboxProps ? rowSelection.getCheckboxProps(record) : null;

    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_checkbox.Checkbox, _objectSpread(_objectSpread({}, checkboxProps), {}, { checked: checked, onChange: onRecordSelectionChange(rowKey) }));
  };

  /**
   * Get visible table columns. If selection is enabled, insert a checkbox column at first.
   */
  var getColumns = function getColumns() {
    var allColumns = _toConsumableArray(columns);
    if (rowSelection) {
      allColumns.unshift({
        key: selectionColumnKey,
        render: renderCheckbox });

    }
    return allColumns;
  };

  /**
   * Returns if a table column is a checkbox column
   *
   * @param column table column
   * @returns True if the column is a checkbox column
   */
  var isSelectionColumn = function isSelectionColumn(column) {return (
      rowSelection && column.key === selectionColumnKey);};

  var renderBodyCell = function renderBodyCell(column, record, index) {
    var key = column.key,dataIndex = column.dataIndex,render = column.render,align = column.align,width = column.width,flex = column.flex,colSpan = column.colSpan,onCell = column.onCell;
    var data = record[dataIndex];
    var text = dataIndex && data != null ? "".concat(data) : '';
    var content = typeof render === 'function' ? render(record, index) : text;

    return /*#__PURE__*/(
      (0, _jsxRuntime.jsx)(Cell, _objectSpread(_objectSpread({

        align: align,
        width: width,
        flex: flex,
        colSpan: colSpan,
        "data-is-selection-column": isSelectionColumn(column),
        styles: column.styles },
      onCell ? onCell(record, index) : null), {}, {
        "data-is-last-column": columns[columns.length - 1] === column, children:

        content }), key || dataIndex));


  };

  var renderRow = function renderRow(record, index) {
    var currentRowKey = getRowKey(record);
    var disabled = rowSelection && rowSelection.getCheckboxProps && rowSelection.getCheckboxProps(record).disabled;
    var isSelectedRow = selectedRowKeys.includes(currentRowKey);
    var rowActions = propRowActions(record).map(function (action) {
      if (action.type === _OverflowMenu.OverflowMenu) {
        var props = action.props;
        var isBoundariesElementGiven = !!(
        props.popperProps &&
        props.popperProps.modifiers &&
        props.popperProps.modifiers.flip &&
        props.popperProps.modifiers.flip.boundariesElement);


        if (isBoundariesElementGiven) {
          return action;
        }

        var boundariesElement = tableBodyElementRef.current || undefined;

        var popperProps = function () {
          var defaultPopperProps = {
            modifiers: {
              preventOverflow: { boundariesElement: boundariesElement },
              flip: { boundariesElement: boundariesElement } } };


          var _props$popperProps = props.popperProps,popperProps = _props$popperProps === void 0 ? defaultPopperProps : _props$popperProps;

          if (popperProps.modifiers) {
            return _objectSpread(_objectSpread({},
            popperProps), {}, {
              modifiers: _objectSpread(_objectSpread({},
              popperProps.modifiers), {}, {
                flip: _objectSpread(_objectSpread({},
                popperProps.modifiers.flip), {}, {
                  // Fixed option
                  boundariesElement: boundariesElement }),

                preventOverflow: _objectSpread(_objectSpread({},
                popperProps.modifiers.preventOverflow), {}, {
                  // Fixed option
                  boundariesElement: boundariesElement }) }) });



          }

          return popperProps;
        }();

        // Set default boundariesElement to flip dropdown menu properly.
        return /*#__PURE__*/_react.default.cloneElement(action, _objectSpread(_objectSpread({}, props), {}, { popperProps: popperProps }));
      }
      return action;
    });

    return /*#__PURE__*/(
      (0, _jsxRuntime.jsxs)(TableRow, _objectSpread(_objectSpread({

        disabled: disabled === undefined ? false : disabled,
        isSelected: isSelectedRow,
        styles: rowStyles ? rowStyles(record, index) : null },
      onRow ? onRow(record, index) : null), {}, { children: [

        getColumns().map(function (column) {return renderBodyCell(column, record, index);}),
        rowActions.length > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)(RowActionsContainer, { children: rowActions })] }), currentRowKey));


  };

  var onColumnTitleClick = (0, _react.useCallback)(
  function (column) {return function () {
      if (!column.sorter) {
        return;
      }

      if (isColumnsEqual(sortColumn, column)) {
        setSortOrder(sortOrder ? sortDirections[(sortDirections.indexOf(sortOrder) + 1) % 2] : 'ascend');
      } else {
        setSortColumn(column);
        setSortOrder('ascend');
      }
    };},
  [sortColumn, sortOrder]);


  var selectableRecords = (0, _react.useMemo)(function () {
    if (!rowSelection) {
      return [];
    }
    var getCheckboxProps = rowSelection.getCheckboxProps;
    if (!getCheckboxProps) {
      return dataSource;
    }

    // filter out rows with disabled checkboxes
    return dataSource.filter(function (record) {return !getCheckboxProps(record).disabled;});
  }, [dataSource, rowSelection]);

  var onSelectionAllChange = (0, _react.useCallback)(function () {
    notifyNewSelection(selectedRowKeys.length > 0 ? [] : selectableRecords.map(function (record) {return getRowKey(record);}));
  }, [selectedRowKeys, selectableRecords, notifyNewSelection, getRowKey]);

  var renderTitleCell = function renderTitleCell(column) {
    var title = column.title,dataIndex = column.dataIndex,sorter = column.sorter,key = column.key,_column$align = column.align,align = _column$align === void 0 ? 'left' : _column$align,width = column.width,flex = column.flex;
    var content = '';

    if (sorter) {
      content = /*#__PURE__*/
      (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, { children: [/*#__PURE__*/
        (0, _jsxRuntime.jsx)(ColumnTitle, { children: title }), /*#__PURE__*/
        (0, _jsxRuntime.jsx)(StyledSortOrderIndicator, { order: isColumnsEqual(sortColumn, column) ? sortOrder : undefined })] });


    } else {
      content = /*#__PURE__*/(0, _jsxRuntime.jsx)(ColumnTitle, { children: title });
    }

    return /*#__PURE__*/(
      (0, _jsxRuntime.jsx)(Cell, {
        as: "th",

        align: align,
        width: width,
        flex: flex,
        "data-is-selection-column": isSelectionColumn(column),
        onClick: onColumnTitleClick(column),
        isClickable: !!column.sorter,
        styles: column.styles, children:

        content }, key || dataIndex));


  };

  var renderBatchActions = function renderBatchActions() {
    var selectedCount = selectedRowKeys.length;
    return /*#__PURE__*/(
      (0, _jsxRuntime.jsxs)(BatchActionsContainer, { children: [/*#__PURE__*/
        (0, _jsxRuntime.jsxs)(SelectedRowCount, { children: [selectedCount, " selected"] }),
        batchActions &&
        batchActions.map(function (batchAction, index) {
          var label = batchAction.label,buttonProps = _objectWithoutProperties(batchAction, ["label"]);
          var defaultBatchActionButtonProps = {
            buttonType: 'primary',
            variant: 'ghost',
            size: 'small' };


          return /*#__PURE__*/(
            (0, _react.createElement)(_button.Button, _objectSpread(_objectSpread(_objectSpread({}, defaultBatchActionButtonProps), buttonProps), {}, { key: index }),
            label));


        })] }));


  };

  var tableHeader = function tableHeader() {
    if (rowSelection) {
      if (selectedRowKeys.length > 0) {
        return renderBatchActions();
      }
      return getColumns().slice(1).map(renderTitleCell);
    }

    return getColumns().map(renderTitleCell);
  };

  var tableBody = /*#__PURE__*/
  (0, _jsxRuntime.jsx)("tbody", { ref: tableBodyElementRef, children:
    sortedDataSource.length > 0 ?
    sortedDataSource.map(renderRow) : /*#__PURE__*/

    (0, _jsxRuntime.jsx)(EmptyViewWrapper, { children: /*#__PURE__*/
      (0, _jsxRuntime.jsx)("td", { colSpan: columns.length, children: emptyView }) }) });





  return /*#__PURE__*/(
    (0, _jsxRuntime.jsxs)(Container, { className: className, children: [/*#__PURE__*/
      (0, _jsxRuntime.jsxs)(TableElement, { density: density, hasFooter: !!footer, children: [/*#__PURE__*/
        (0, _jsxRuntime.jsx)("thead", { children: /*#__PURE__*/
          (0, _jsxRuntime.jsxs)("tr", { children: [
            rowSelection && /*#__PURE__*/
            (0, _jsxRuntime.jsx)(Cell, { as: "th", "data-is-selection-column": true, align: "center", width: undefined, flex: undefined, children: /*#__PURE__*/
              (0, _jsxRuntime.jsx)(_checkbox.Checkbox, {
                checked: selectableRecords.length > 0 && selectedRowKeys.length === selectableRecords.length,
                disabled: dataSource.length === 0,
                indeterminate: selectedRowKeys.length > 0 && selectedRowKeys.length < selectableRecords.length,
                onChange: onSelectionAllChange }) }),



            tableHeader()] }) }),


        showScrollbars ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_ScrollBar.ScrollBar, { ref: scrollBarRef, children: tableBody }) : tableBody] }),

      loading && /*#__PURE__*/(0, _jsxRuntime.jsx)(_spinner.SpinnerFull, { transparent: true, zIndex: 10 }),
      footer && /*#__PURE__*/(0, _jsxRuntime.jsx)(FooterWrapper, { children: footer })] }));


}