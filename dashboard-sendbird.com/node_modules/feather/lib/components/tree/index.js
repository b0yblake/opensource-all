"use strict";require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.array.slice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.object.keys.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");Object.defineProperty(exports, "__esModule", { value: true });exports.Tree = void 0;require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.array.find.js");require("core-js/modules/es.array.concat.js");require("core-js/modules/es.array.splice.js");require("core-js/modules/es.array.find-index.js");var _react = require("react");
var _styledComponents = _interopRequireDefault(require("styled-components"));




var _treeNode = require("./treeNode");
var _utils = require("./utils");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}

















































var TreeNodes = _styledComponents.default.ul.withConfig({ displayName: "tree__TreeNodes", componentId: "w4fhwh-0" })(["min-width:", "px;"],
function (_ref) {var minWidth = _ref.minWidth;return minWidth;});


var Tree = /*#__PURE__*/(0, _react.forwardRef)(
function (_ref2,













forwardedRef)
{var treeData = _ref2.treeData,selectedNodes = _ref2.selectedNodes,treeExpandedKeys = _ref2.treeExpandedKeys,_ref2$treeDefaultExpa = _ref2.treeDefaultExpandAll,treeDefaultExpandAll = _ref2$treeDefaultExpa === void 0 ? false : _ref2$treeDefaultExpa,constructedTreeNodes = _ref2.constructedTreeNodes,minWidth = _ref2.minWidth,onSelect = _ref2.onSelect,onTreeExpand = _ref2.onTreeExpand,getItemProps = _ref2.getItemProps,getMenuProps = _ref2.getMenuProps,nodeToElement = _ref2.nodeToElement;
  var _useState = (0, _react.useState)([]),_useState2 = _slicedToArray(_useState, 2),nodes = _useState2[0],setNodes = _useState2[1];
  var _useState3 = (0, _react.useState)([]),_useState4 = _slicedToArray(_useState3, 2),expandedKeys = _useState4[0],setExpandedKeys = _useState4[1];

  (0, _react.useEffect)(function () {
    setNodes(constructedTreeNodes !== null && constructedTreeNodes !== void 0 ? constructedTreeNodes : (0, _utils.constructTreeNodes)(treeData));
  }, [constructedTreeNodes, treeData]);

  (0, _react.useEffect)(function () {
    if (treeDefaultExpandAll && expandedKeys.length === 0) {
      var allExpandableNodeKeys = nodes.filter(function (node) {return node.children;}).map(function (node) {return node.key;});
      setExpandedKeys(allExpandableNodeKeys);
      onTreeExpand === null || onTreeExpand === void 0 ? void 0 : onTreeExpand(allExpandableNodeKeys);
    }
  }, [nodes, expandedKeys.length, onTreeExpand, treeDefaultExpandAll]);

  var handleSelect = function handleSelect(selectedItem) {
    var nextSelectedNodes = _toConsumableArray(selectedNodes);
    var isAlreadySelected = (0, _utils.getCurrentSelectedNodes)(nodes, selectedNodes).find(
    function (selectedNode) {return selectedNode.key === selectedItem.key;});

    var isParentAlreadySelected =
    selectedItem.parentKey &&
    !!(0, _utils.getCurrentSelectedNodes)(nodes, selectedNodes).find(
    function (selectedNode) {return selectedNode.key === selectedItem.parentKey;});


    if (isAlreadySelected || isParentAlreadySelected) {
      nextSelectedNodes = (0, _utils.getCurrentSelectedNodes)(nodes, selectedNodes).filter(function (selectedNode) {
        if (selectedNode.key === selectedItem.key) {
          return false;
        }
        if (selectedNode.parentKey === selectedItem.key) {
          return false;
        }
        if (isParentAlreadySelected && selectedNode.key === selectedItem.parentKey) {
          return false;
        }
        return true;
      });
      var siblings = nodes.filter(
      function (node) {return node.key !== selectedItem.key && node.parentKey === selectedItem.parentKey;});

      nextSelectedNodes = isParentAlreadySelected ? nextSelectedNodes.concat(siblings) : nextSelectedNodes;
    } else {
      nextSelectedNodes.push(selectedItem);
      if (selectedItem.children) {
        nextSelectedNodes = (0, _utils.getCurrentSelectedNodes)(nodes, nextSelectedNodes).filter(
        function (selectedNode) {return selectedNode.parentKey !== selectedItem.key;});

      }
      if (selectedItem.parentKey) {var _parent$children;
        var parent = nodes.find(function (node) {return node.key === selectedItem.parentKey;});
        var currentSelectedChildren = (0, _utils.getCurrentSelectedNodes)(nodes, nextSelectedNodes).filter(
        function (selectedNode) {return selectedNode.parentKey === (parent === null || parent === void 0 ? void 0 : parent.key);});


        if ((parent === null || parent === void 0 ? void 0 : (_parent$children = parent.children) === null || _parent$children === void 0 ? void 0 : _parent$children.length) === currentSelectedChildren.length) {
          nextSelectedNodes = (0, _utils.getCurrentSelectedNodes)(nodes, nextSelectedNodes).filter(
          function (selectedNode) {return selectedNode.parentKey !== parent.key;});

          nextSelectedNodes.push(parent);
        }
      }
    }
    onSelect(
    nodes.
    filter(function (node) {return (
        (0, _utils.getCurrentSelectedNodes)(nodes, nextSelectedNodes).find(function (selectedNode) {return selectedNode.key === node.key;}));}).

    map(function (_ref3) {var label = _ref3.label,value = _ref3.value,children = _ref3.children,icon = _ref3.icon,tooltipContent = _ref3.tooltipContent;return {
        label: label,
        value: value,
        children: children,
        icon: icon,
        tooltipContent: tooltipContent };}),

    (0, _utils.checkIsAllNodesSelected)(nodes, nextSelectedNodes));

  };

  var handleExpand = function handleExpand(selectedItemKey) {
    var nextExpandedKeys = _toConsumableArray(treeExpandedKeys !== null && treeExpandedKeys !== void 0 ? treeExpandedKeys : expandedKeys);

    if ((0, _utils.checkIsExpandedNode)(nextExpandedKeys, selectedItemKey)) {
      nextExpandedKeys.splice(
      nextExpandedKeys.findIndex(function (expandedKey) {return expandedKey === selectedItemKey;}),
      1);

    } else {
      nextExpandedKeys.push(selectedItemKey);
    }

    if (treeExpandedKeys) {
      onTreeExpand === null || onTreeExpand === void 0 ? void 0 : onTreeExpand(nextExpandedKeys);
    } else {
      setExpandedKeys(nextExpandedKeys);
    }
  };

  (0, _react.useImperativeHandle)(forwardedRef, function () {return { handleSelect: handleSelect };});

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(TreeNodes, _objectSpread(_objectSpread({ minWidth: minWidth }, getMenuProps === null || getMenuProps === void 0 ? void 0 : getMenuProps()), {}, { children:
      nodes.
      filter(function (node) {
        if (node.parentKey) {
          var childNode = node;
          var parent = nodes.find(function (node) {return node.key === childNode.parentKey;});
          var isParentNodeExpanded = expandedKeys.some(function (expandedKey) {return expandedKey === (parent === null || parent === void 0 ? void 0 : parent.key);});

          return isParentNodeExpanded;
        }
        return true;
      }).
      map(function (node) {
        var isSelected = (0, _utils.checkIsSelectedNode)((0, _utils.getCurrentSelectedNodes)(nodes, selectedNodes), node);
        var isIndeterminate =
        !!node.children && !isSelected && (0, _utils.getCurrentSelectedNodes)(node.children, selectedNodes).length > 0;
        var isExpanded = !!node.children && (0, _utils.checkIsExpandedNode)(treeExpandedKeys !== null && treeExpandedKeys !== void 0 ? treeExpandedKeys : expandedKeys, node.key);

        return /*#__PURE__*/(
          (0, _jsxRuntime.jsx)(_treeNode.TreeNode, {

            node: node,
            isSelected: isSelected,
            isIndeterminate: isIndeterminate,
            isExpanded: isExpanded,
            onSelect: handleSelect,
            onExpand: handleExpand,
            nodeToElement: nodeToElement,
            getItemProps: getItemProps }, node.key));


      }) })));


});exports.Tree = Tree;