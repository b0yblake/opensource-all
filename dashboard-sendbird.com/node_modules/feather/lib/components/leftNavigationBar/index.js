"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.object.keys.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.array.slice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.weak-map.js");Object.defineProperty(exports, "__esModule", { value: true });exports.LeftNavigationBar = exports.createLeftNavigationBarItem = exports.createLeftNavigationBarSubItem = exports.createLeftNavigationBarLabel = exports.LeftNavigationBarDivider = void 0;require("core-js/modules/es.regexp.exec.js");require("core-js/modules/es.string.replace.js");require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.concat.js");var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _debounce = _interopRequireDefault(require("lodash/debounce"));
var _resizeObserver = require("resize-observer");

var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));

var _animation = require("../../animation");
var _elevation = require("../../elevation");

var _leftNavigationBar = require("../../types/components/leftNavigationBar");








var _ScrollBar = require("../ScrollBar");
var _LNBMenuItem = require("./LNBMenuItem");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

var DEFAULT_WIDTH = 216;
var COLLAPSED_WIDTH = 56;







var ExpandCollapseMenuItem = (0, _styledComponents.default)(_LNBMenuItem.MenuItem).withConfig({ displayName: "leftNavigationBar__ExpandCollapseMenuItem", componentId: "sc-9p8vr-0" })(["margin:0;"]);



var DividerItem = _styledComponents.default.div.withConfig({ displayName: "leftNavigationBar__DividerItem", componentId: "sc-9p8vr-1" })(["flex:none;background-color:", ";width:100%;height:1px;margin:8px 0;"],

(0, _cssVariables.default)('neutral-3'));





var Container = _styledComponents.default.nav.withConfig({ displayName: "leftNavigationBar__Container", componentId: "sc-9p8vr-2" })(["display:flex;flex-direction:column;width:", "px;background-color:", ";overflow-x:hidden;box-shadow:inset -1px 0 0 0 ", ";position:relative;transition:", "s ", ";transition-property:width,box-shadow;will-change:width,box-shadow;", ""],


function (_ref) {var _ref$$width = _ref.$width,$width = _ref$$width === void 0 ? DEFAULT_WIDTH : _ref$$width;return $width;},
(0, _cssVariables.default)('neutral-1'),

(0, _cssVariables.default)('neutral-2'),


_LNBMenuItem.COLLAPSED_ANIMATION_DURATION_SECOND, _animation.transitionDefault,



function (props) {return (
    props.$isCollapsed && (0,
    _styledComponents.css)(["&[data-ignore-hover='false']:hover{box-shadow:inset -1px 0 0 0 ", ",", ";}", "{color:transparent;height:0;padding:0;}"],

    (0, _cssVariables.default)('neutral-3'), String(_elevation.shadow[8]).replace('box-shadow:', ''),


    _LNBMenuItem.LabelItem));});







var EXPAND_COLLAPSE_BUTTON_WRAPPER_HEIGHT = '48px';
var ExpandCollapseButtonWrapper = _styledComponents.default.div.withConfig({ displayName: "leftNavigationBar__ExpandCollapseButtonWrapper", componentId: "sc-9p8vr-3" })(["position:absolute;bottom:0;left:0;right:0;flex:none;height:", ";margin-top:auto;", "{margin:0;margin-bottom:4px;}"],





EXPAND_COLLAPSE_BUTTON_WRAPPER_HEIGHT,


DividerItem);





var MenuScrollBar = (0, _styledComponents.default)(_ScrollBar.ScrollBar).withConfig({ displayName: "leftNavigationBar__MenuScrollBar", componentId: "sc-9p8vr-4" })(["padding:8px 0;height:auto;", ""],


function (props) {return (
    !props.isExpandCollapseButtonHidden && (0,
    _styledComponents.css)(["margin-bottom:", ";"],
    EXPAND_COLLAPSE_BUTTON_WRAPPER_HEIGHT));});



var LeftNavigationBarDivider = {
  type: _leftNavigationBar.LeftNavigationBarItemType.Divider };exports.LeftNavigationBarDivider = LeftNavigationBarDivider;


var createLeftNavigationBarLabel = function createLeftNavigationBarLabel(params) {return _objectSpread({
    type: _leftNavigationBar.LeftNavigationBarItemType.Label },
  params);};exports.createLeftNavigationBarLabel = createLeftNavigationBarLabel;


var createLeftNavigationBarSubItem = function createLeftNavigationBarSubItem(
params) {return _objectSpread({

    type: _leftNavigationBar.LeftNavigationBarItemType.SubItem },
  params);};exports.createLeftNavigationBarSubItem = createLeftNavigationBarSubItem;


var createLeftNavigationBarItem = function createLeftNavigationBarItem(params) {return _objectSpread({
    type: _leftNavigationBar.LeftNavigationBarItemType.Item },
  params);};exports.createLeftNavigationBarItem = createLeftNavigationBarItem;


var LeftNavigationBar = function LeftNavigationBar(_ref2)






{var className = _ref2.className,_ref2$isCollapsed = _ref2.isCollapsed,isCollapsed = _ref2$isCollapsed === void 0 ? false : _ref2$isCollapsed,items = _ref2.items,activeKey = _ref2.activeKey,onExpandCollapseButtonClickProp = _ref2.onExpandCollapseButtonClick,_ref2$isExpandCollaps = _ref2.isExpandCollapseButtonHidden,isExpandCollapseButtonHidden = _ref2$isExpandCollaps === void 0 ? false : _ref2$isExpandCollaps;
  var containerRef = (0, _react.useRef)(null);
  var isFirstRender = (0, _react.useRef)(true);
  var menuScrollBarRef = (0, _react.useRef)(null);
  var _useState = (0, _react.useState)(null),_useState2 = _slicedToArray(_useState, 2),expandCollapseButton = _useState2[0],setExpandCollapseButton = _useState2[1];
  var _useState3 = (0, _react.useState)(DEFAULT_WIDTH),_useState4 = _slicedToArray(_useState3, 2),width = _useState4[0],setWidth = _useState4[1];
  var _useState5 = (0, _react.useState)(false),_useState6 = _slicedToArray(_useState5, 2),isHovered = _useState6[0],setIsHovered = _useState6[1];

  var updateScrollBarRef = (0, _react.useMemo)(
  function () {return (
      (0, _debounce.default)(function () {
        menuScrollBarRef.current && menuScrollBarRef.current.update();
      }, 250));},
  []);


  var resizeObserverRef = (0, _react.useRef)(
  new _resizeObserver.ResizeObserver(function () {
    updateScrollBarRef();
  }));


  (0, _react.useEffect)(function () {
    var resizeObserver = resizeObserverRef.current;
    if (containerRef.current) {
      resizeObserver.observe(containerRef.current);
    }
    return function () {return resizeObserver.disconnect();};
  });

  (0, _react.useEffect)(function () {
    if (isFirstRender.current) {
      isFirstRender.current = false;
    }
  }, []);

  var onExpandCollapseButtonClick = (0, _react.useCallback)(function () {
    containerRef.current && containerRef.current.setAttribute('data-ignore-hover', 'true');
    onExpandCollapseButtonClickProp && onExpandCollapseButtonClickProp(!isCollapsed);
  }, [isCollapsed, onExpandCollapseButtonClickProp]);

  (0, _react.useEffect)(function () {
    var expandCollapseButton = /*#__PURE__*/
    (0, _jsxRuntime.jsxs)(ExpandCollapseMenuItem, {
      "data-test-id": "ExpandCollapseButton",
      role: "link",
      $isInteractive: true,
      onClick: onExpandCollapseButtonClick, children: [/*#__PURE__*/

      (0, _jsxRuntime.jsx)(_LNBMenuItem.MenuIcon, { icon: isCollapsed ? 'expand' : 'collapse', size: 20, color: (0, _cssVariables.default)('neutral-7') }),
      isCollapsed ? 'Expand' : 'Collapse'] });



    if (isFirstRender.current || !isCollapsed) {
      setExpandCollapseButton(expandCollapseButton);
      return;
    }

    setTimeout(function () {return setExpandCollapseButton(expandCollapseButton);}, _LNBMenuItem.COLLAPSED_ANIMATION_DURATION_SECOND * 1000);
  }, [isCollapsed, onExpandCollapseButtonClick]);

  (0, _react.useEffect)(function () {
    if (containerRef.current) {
      containerRef.current.style.willChange = 'contents';
    }
    setWidth(isCollapsed ? COLLAPSED_WIDTH : DEFAULT_WIDTH);
  }, [isCollapsed]);

  var onTransitionEnd = (0, _react.useCallback)(function (event) {
    event.currentTarget.style.willChange = 'auto';
  }, []);

  var onContainerMouseEnter = (0, _react.useCallback)(function () {
    setWidth(DEFAULT_WIDTH);
    setIsHovered(true);
  }, []);

  var onContainerMouseLeave = (0, _react.useCallback)(function () {
    containerRef.current && containerRef.current.setAttribute('data-ignore-hover', 'false');
    if (isCollapsed) {
      setWidth(COLLAPSED_WIDTH);
    }
    setIsHovered(false);
  }, [isCollapsed]);

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsxs)(Container, {
      ref: containerRef,
      className: className,
      $isCollapsed: isCollapsed,
      $width: width,
      onMouseEnter: onContainerMouseEnter,
      onMouseLeave: onContainerMouseLeave,
      onTransitionEnd: onTransitionEnd, children: [/*#__PURE__*/

      (0, _jsxRuntime.jsx)(MenuScrollBar, {
        ref: menuScrollBarRef,
        options: { suppressScrollX: true },
        isExpandCollapseButtonHidden: isExpandCollapseButtonHidden, children:

        items.map(function (item, index) {
          var key =
          item.type === (_leftNavigationBar.LeftNavigationBarItemType.Item || _leftNavigationBar.LeftNavigationBarItemType.SubItem) ?
          item.key : "".concat(
          item.type, "__").concat(index);
          return /*#__PURE__*/(
            (0, _jsxRuntime.jsx)(_LNBMenuItem.LNBMenuItem, {

              item: item,
              activeKey: activeKey,
              isLNBCollapsed: isCollapsed,
              isLNBHovered: isHovered,
              setLNBWidth: setWidth,
              collapsedLNBWidth: COLLAPSED_WIDTH }, key));


        }) }),

      !isExpandCollapseButtonHidden && /*#__PURE__*/
      (0, _jsxRuntime.jsxs)(ExpandCollapseButtonWrapper, { children: [/*#__PURE__*/
        (0, _jsxRuntime.jsx)(DividerItem, {}),
        expandCollapseButton] })] }));




};exports.LeftNavigationBar = LeftNavigationBar;

LeftNavigationBar.collapseAnimationDurationSecond = _LNBMenuItem.COLLAPSED_ANIMATION_DURATION_SECOND;
LeftNavigationBar.defaultWidth = DEFAULT_WIDTH;
LeftNavigationBar.collapsedWidth = COLLAPSED_WIDTH;