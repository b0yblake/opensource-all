"use strict";require("core-js/modules/es.object.keys.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");Object.defineProperty(exports, "__esModule", { value: true });exports.InlineNotification = void 0;require("core-js/modules/es.array.join.js");require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.filter.js");var _react = require("react");
var _styledComponents = _interopRequireDefault(require("styled-components"));


var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));
var _types = require("../../../lib/types");
var _typography = require("../../../lib/typography");

var _button = require("../button");
var _icon = require("../icon");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}

var Container = _styledComponents.default.div.withConfig({ displayName: "InlineNotification__Container", componentId: "sc-86kbeo-0" })(["display:grid;grid-template-columns:", ";grid-template-rows:auto;grid-gap:16px;border-radius:4px;padding:0 16px;background-color:", ";"],

function (_ref) {var columns = _ref.columns;return (
    columns.map(function (item) {return { icon: '20px', message: '1fr', action: 'auto', close: '16px' }[item];}).join(' '));},




function (props) {return props.backgroundColor;});


var IconWrapper = _styledComponents.default.div.withConfig({ displayName: "InlineNotification__IconWrapper", componentId: "sc-86kbeo-1" })(["padding-top:14px;svg{display:block;}"]);







var MessageWrapper = _styledComponents.default.div.withConfig({ displayName: "InlineNotification__MessageWrapper", componentId: "sc-86kbeo-2" })(["grid-column:2 / span 1;", ";padding:14px 0;font-weight:400;color:", ";"],

_typography.Subtitles['subtitle-01'],


(0, _cssVariables.default)('neutral-10'));


var ActionWrapper = _styledComponents.default.div.withConfig({ displayName: "InlineNotification__ActionWrapper", componentId: "sc-86kbeo-3" })(["display:flex;align-items:center;"]);




var CloseWrapper = _styledComponents.default.div.withConfig({ displayName: "InlineNotification__CloseWrapper", componentId: "sc-86kbeo-4" })(["cursor:pointer;display:flex;align-items:center;"]);





var InlineNotification = (0, _styledComponents.default)( /*#__PURE__*/
(0, _react.forwardRef)(
function (_ref2, ref) {var action = _ref2.action,type = _ref2.type,message = _ref2.message,className = _ref2.className,onClose = _ref2.onClose,iconProps = _ref2.iconProps,props = _objectWithoutProperties(_ref2, ["action", "type", "message", "className", "onClose", "iconProps"]);
  var backgroundColor = {
    error: (0, _cssVariables.default)('red-2'),
    info: (0, _cssVariables.default)('neutral-2'),
    success: (0, _cssVariables.default)('green-2'),
    warning: (0, _cssVariables.default)('yellow-2') }[
  type];

  var iconColor = {
    error: (0, _cssVariables.default)('red-5'),
    info: (0, _cssVariables.default)('neutral-10'),
    success: (0, _cssVariables.default)('green-5'),
    warning: (0, _cssVariables.default)('neutral-10') }[
  type];

  var icon = {
    error: 'error-filled',
    info: 'info-filled',
    success: 'success-filled',
    warning: 'warning-filled' }[
  type];

  var overlayButtonBackgroundType = {
    error: _types.OverlayButtonBackgroundType.Danger,
    info: _types.OverlayButtonBackgroundType.Mono,
    success: _types.OverlayButtonBackgroundType.Success,
    warning: _types.OverlayButtonBackgroundType.Warning }[
  type];

  var handleClickClose = (0, _react.useCallback)(function () {
    onClose === null || onClose === void 0 ? void 0 : onClose();
  }, [onClose]);

  var renderAction = function renderAction(definedAction) {
    var label = definedAction.label,buttonProps = _objectWithoutProperties(definedAction, ["label"]);
    return /*#__PURE__*/(
      (0, _jsxRuntime.jsx)(ActionWrapper, { children: /*#__PURE__*/
        (0, _jsxRuntime.jsx)(_button.OverlayButton, _objectSpread(_objectSpread({}, buttonProps), {}, { children: label })) }));


  };
  var defaultIconProps = {
    icon: icon,
    size: 20,
    color: iconColor,
    assistiveText: 'Notification' };


  var notificationIconProps = _objectSpread(_objectSpread({},
  defaultIconProps),
  iconProps);

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(_button.OverlayButtonBackgroundTypeContext.Provider, { value: overlayButtonBackgroundType, children: /*#__PURE__*/
      (0, _jsxRuntime.jsxs)(Container, _objectSpread(_objectSpread({
        ref: ref,
        role: "alert",
        className: className,
        backgroundColor: backgroundColor,
        columns: ['icon', 'message', action && 'action', onClose && 'close'].filter(function (v) {return !!v;}) },
      props), {}, { children: [/*#__PURE__*/

        (0, _jsxRuntime.jsx)(IconWrapper, { children: /*#__PURE__*/
          (0, _jsxRuntime.jsx)(_icon.Icon, _objectSpread({}, notificationIconProps)) }), /*#__PURE__*/

        (0, _jsxRuntime.jsx)(MessageWrapper, { hasAction: !!action, children: message }),
        action && renderAction(action),
        onClose && /*#__PURE__*/
        (0, _jsxRuntime.jsx)(CloseWrapper, { onClick: handleClickClose, children: /*#__PURE__*/
          (0, _jsxRuntime.jsx)(_icon.Icon, { icon: "close", size: 16, color: (0, _cssVariables.default)('neutral-9') }) })] })) }));





})).withConfig({ displayName: "InlineNotification", componentId: "sc-86kbeo-5" })([""]);exports.InlineNotification = InlineNotification;