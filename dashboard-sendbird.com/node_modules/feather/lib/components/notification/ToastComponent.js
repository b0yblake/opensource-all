"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.array.slice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.object.keys.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.weak-map.js");Object.defineProperty(exports, "__esModule", { value: true });exports.ToastComponent = void 0;require("core-js/modules/es.array.concat.js");require("core-js/modules/es.array.map.js");var _react = require("react");









var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _polished = require("polished");

var _animation = require("../../../lib/animation");
var _elevation = require("../../../lib/elevation");
var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));

var _typography = require("../../../lib/typography");

var _icon = require("../icon");
var _constants = require("./constants");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}

var SINGLE_LINE_HEIGHT = 20;





















var baseColorMap = {
  info: (0, _cssVariables.default)('neutral-10'),
  success: (0, _cssVariables.default)('neutral-10'),
  warning: (0, _cssVariables.default)('yellow-5'),
  error: (0, _cssVariables.default)('red-5') };


var ToastTitle = _styledComponents.default.h3.withConfig({ displayName: "ToastComponent__ToastTitle", componentId: "uwqnih-0" })(["margin-bottom:4px;", ";"],

_typography.Headings['heading-01']);


var ToastText = _styledComponents.default.p.withConfig({ displayName: "ToastComponent__ToastText", componentId: "uwqnih-1" })(["flex:1;margin-top:6px;margin-bottom:6px;margin-right:16px;color:inherit;", ";line-height:", "px;"],





_typography.Body['body-short-01'],


SINGLE_LINE_HEIGHT);


var ToastCloseButton = _styledComponents.default.button.withConfig({ displayName: "ToastComponent__ToastCloseButton", componentId: "uwqnih-2" })(["display:flex;align-items:center;justify-content:center;transition:background-color 0.2s ", ";margin:0;margin-left:8px;border:none;border-radius:4px;background:transparent;padding:0;width:32px;height:32px;color:inherit;-webkit-appearance:none;&:hover{background-color:", ";cursor:pointer;}&:active{background-color:", ";}"],



_animation.transitionDefault,












(0, _polished.rgba)('white', 0.16),




(0, _polished.rgba)('white', 0.12));



var Actions = _styledComponents.default.div.withConfig({ displayName: "ToastComponent__Actions", componentId: "uwqnih-3" })(["display:flex;flex-direction:row;flex-wrap:nowrap;> * + *{margin-left:4px;}"]);








var ToastContainer = _styledComponents.default.div.withConfig({ displayName: "ToastComponent__ToastContainer", componentId: "uwqnih-4" })(["position:relative;border-radius:4px;background-color:", ";overflow:hidden;color:", ";", ";", " ", " ", "{word-break:break-word;}"],






function (_ref) {var $baseColor = _ref.$baseColor;return $baseColor;},

function (_ref2) {var $baseColor = _ref2.$baseColor;return $baseColor === (0, _cssVariables.default)('yellow-5') ? (0, _cssVariables.default)('neutral-9') : 'white';},
_elevation.shadow[16],

function (_ref3) {var $height = _ref3.$height;return $height ? "height: ".concat($height, "px;") : null;},

function (_ref4) {var $layout = _ref4.$layout;return (
    $layout === 'tall' && (0,
    _styledComponents.css)(["", "{justify-content:flex-end;order:10;padding:8px;width:100%;}"],
    Actions));},







ToastText);




var ContentWrapper = _styledComponents.default.div.withConfig({ displayName: "ToastComponent__ContentWrapper", componentId: "uwqnih-5" })(["display:flex;flex-wrap:wrap;align-items:flex-start;padding:8px;padding-left:52px;min-width:", "px;max-width:", "px;min-height:0;"],





_constants.minWidth,
_constants.maxWidth);



// FIXME: replace with overlay button
var ToastActionButton = _styledComponents.default.button.withConfig({ displayName: "ToastComponent__ToastActionButton", componentId: "uwqnih-6" })(["display:flex;flex:none;align-items:center;align-self:center;justify-content:center;transition:", ";outline:none;border:0;border-radius:4px;background-color:", ";padding:6px 16px;min-width:80px;line-height:1.43;color:", ";font-size:14px;font-weight:600;user-select:none;&:hover{cursor:pointer;background-color:", ";}&:focus:not(:active){box-shadow:0 0 0 2px ", ";}"],





(0, _animation.transitions)({ duration: 0.2, properties: ['color', 'background-color', 'border', 'box-shadow'] }),



function (_ref5) {var baseColor = _ref5.baseColor;return (
    baseColor === (0, _cssVariables.default)('yellow-5') ? (0, _cssVariables.default)('bg-overlay-1') : (0, _cssVariables.default)('bg-inverse-overlay-1'));},



function (_ref6) {var baseColor = _ref6.baseColor;return baseColor === (0, _cssVariables.default)('yellow-5') ? 'black' : 'white';},






(0, _polished.rgba)('white', 0.16),



(0, _cssVariables.default)('purple-7'));



var StatusIcon = (0, _styledComponents.default)(_icon.Icon).withConfig({ displayName: "ToastComponent__StatusIcon", componentId: "uwqnih-7" })(["position:absolute;top:14px;left:16px;"]);





var usePrerender = function usePrerender(params)



{var _actions$length;
  var _params$props =



  params.props,layout = _params$props.layout,prerender = _params$props.prerender,actions = _params$props.actions,message = _params$props.message,containerRef = params.containerRef,textRef = params.textRef;

  var _useState = (0, _react.useState)(layout || 'short'),_useState2 = _slicedToArray(_useState, 2),prerenderLayout = _useState2[0],setPrerenderLayout = _useState2[1];
  var _useState3 = (0, _react.useState)(false),_useState4 = _slicedToArray(_useState3, 2),isPrerenderDone = _useState4[0],setIsPrerenderDone = _useState4[1];
  var _useState5 = (0, _react.useState)(null),_useState6 = _slicedToArray(_useState5, 2),prerenderResult = _useState6[0],setPrerenderResult = _useState6[1];

  var actionCount = (_actions$length = actions === null || actions === void 0 ? void 0 : actions.length) !== null && _actions$length !== void 0 ? _actions$length : 0;

  // This effect should be applied before DOM mutations are painted.
  (0, _react.useLayoutEffect)(function () {
    if (prerender) {var _textRef$current$scro, _textRef$current;
      // if there are 2+ actions or the text wraps, move the actions to the next line.
      var moveActionsToNextLine = actionCount > 1 || ((_textRef$current$scro = (_textRef$current = textRef.current) === null || _textRef$current === void 0 ? void 0 : _textRef$current.scrollHeight) !== null && _textRef$current$scro !== void 0 ? _textRef$current$scro : 0) > SINGLE_LINE_HEIGHT;
      setPrerenderLayout(moveActionsToNextLine ? 'tall' : 'short');
      setIsPrerenderDone(true);
    }
  }, [message, actionCount, prerender, textRef]);

  (0, _react.useEffect)(function () {
    if (prerender && isPrerenderDone) {var _containerRef$current, _containerRef$current2;
      setPrerenderResult({
        height: (_containerRef$current = (_containerRef$current2 = containerRef.current) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.scrollHeight) !== null && _containerRef$current !== void 0 ? _containerRef$current : 0,
        layout: prerenderLayout });

    }
  }, [isPrerenderDone, prerenderLayout, prerender, containerRef]);

  return prerenderResult;
};

var ToastComponent = /*#__PURE__*/(0, _react.forwardRef)(function (props, _ref7) {var _prerenderResult$layo, _prerenderResult$heig, _prerenderResult$layo2;
  var
  status =









  props.status,title = props.title,message = props.message,actions = props.actions,iconProps = props.iconProps,onActionClick = props.onActionClick,onCloseButtonClick = props.onCloseButtonClick,className = props.className,layoutProp = props.layout,prerender = props.prerender;
  var containerRef = (0, _react.useRef)(null);
  var textRef = (0, _react.useRef)(null);
  var _useState7 = (0, _react.useState)(0),_useState8 = _slicedToArray(_useState7, 2),height = _useState8[0],setHeight = _useState8[1];

  var toastBaseColor = baseColorMap[status];

  var prerenderResult = usePrerender({ props: props, containerRef: containerRef, textRef: textRef });

  // If title exists, layout must be always `tall`.
  var layout = title ? 'tall' : (_prerenderResult$layo = prerenderResult === null || prerenderResult === void 0 ? void 0 : prerenderResult.layout) !== null && _prerenderResult$layo !== void 0 ? _prerenderResult$layo : layoutProp;

  (0, _react.useEffect)(function () {
    if (!prerender) {var _containerRef$current3, _containerRef$current4;
      // set height CSS property to animate the height using CSS transition
      setHeight((_containerRef$current3 = (_containerRef$current4 = containerRef.current) === null || _containerRef$current4 === void 0 ? void 0 : _containerRef$current4.scrollHeight) !== null && _containerRef$current3 !== void 0 ? _containerRef$current3 : 0);
    }
  }, [containerRef, prerender]);

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsxs)(ToastContainer, {
      ref: function ref(node) {
        containerRef.current = node;
        if (typeof _ref7 === 'function') {
          _ref7(node);
        } else if (_ref7) {
          _ref7.current = node;
        }
      }
      /**
       * do not remove status
       * classNames `error | info | warning | success` are used for custom styling
       */,
      className: className ? "".concat(className, " ").concat(status) : status,
      role: prerender ? undefined : 'alert',
      $baseColor: toastBaseColor,
      $layout: layout,
      $height: height,
      "data-prerender-height": (_prerenderResult$heig = prerenderResult === null || prerenderResult === void 0 ? void 0 : prerenderResult.height) !== null && _prerenderResult$heig !== void 0 ? _prerenderResult$heig : undefined,
      "data-prerender-layout": (_prerenderResult$layo2 = prerenderResult === null || prerenderResult === void 0 ? void 0 : prerenderResult.layout) !== null && _prerenderResult$layo2 !== void 0 ? _prerenderResult$layo2 : undefined, children: [/*#__PURE__*/

      (0, _jsxRuntime.jsx)(StatusIcon, _objectSpread({}, iconProps)), /*#__PURE__*/
      (0, _jsxRuntime.jsxs)(ContentWrapper, { children: [/*#__PURE__*/
        (0, _jsxRuntime.jsxs)(ToastText, { ref: textRef, children: [
          title && /*#__PURE__*/(0, _jsxRuntime.jsx)(ToastTitle, { children: title }),
          message] }),

        actions && actions.length > 0 && /*#__PURE__*/
        (0, _jsxRuntime.jsx)(Actions, { children:
          actions.map(function (action) {
            var label = action.label,_onClick = action.onClick;

            return /*#__PURE__*/(
              (0, _jsxRuntime.jsx)(ToastActionButton, {

                type: "button",
                baseColor: toastBaseColor,
                onClick: function onClick(event) {
                  _onClick === null || _onClick === void 0 ? void 0 : _onClick(event);
                  onActionClick === null || onActionClick === void 0 ? void 0 : onActionClick(action);
                }, children:

                label }, label));


          }) }), /*#__PURE__*/


        (0, _jsxRuntime.jsx)(ToastCloseButton, { type: "button", onClick: onCloseButtonClick, title: "Close", children: /*#__PURE__*/
          (0, _jsxRuntime.jsx)(_icon.Icon, { icon: "close", size: 20, color: "currentColor" }) })] })] }));




});exports.ToastComponent = ToastComponent;