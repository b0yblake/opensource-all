"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.SelectedNodes = void 0;require("core-js/modules/es.array.map.js");
var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Tag = require("../../../lib/components/Tag");
var _tooltip = require("../../../lib/components/tooltip");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}








var SelectedNodesWrapper = _styledComponents.default.div.withConfig({ displayName: "selectedNodes__SelectedNodesWrapper", componentId: "sc-4us9li-0" })(["min-height:30px;padding:3px 0;overflow:hidden;text-align:left;line-height:0;&& > *{margin:2px;}"]);












var SelectedNode = (0, _styledComponents.default)(_Tag.Tag).attrs({ variant: _Tag.TagVariant.Dark }).withConfig({ displayName: "selectedNodes__SelectedNode", componentId: "sc-4us9li-1" })([""]);
var InlineTooltip = (0, _styledComponents.default)(_tooltip.Tooltip).withConfig({ displayName: "selectedNodes__InlineTooltip", componentId: "sc-4us9li-2" })(["display:inline-block;"]);



var SelectedNodes = function SelectedNodes(_ref) {var selectedNodes = _ref.selectedNodes,_onRemove = _ref.onRemove,tagMaxWidth = _ref.tagMaxWidth;
  return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(SelectedNodesWrapper, { children:
      selectedNodes.map(function (node) {
        var tag = /*#__PURE__*/
        (0, _jsxRuntime.jsx)(SelectedNode, {

          icon: node.icon,
          onRemove: function onRemove(event) {
            // prevent the dropdown from opening by click event
            event.stopPropagation();
            _onRemove(node);
          },
          maxWidth: typeof tagMaxWidth === 'number' ? tagMaxWidth : undefined,
          disableTooltip: true, children:

          node.label }, node.key);



        return node.tooltipContent ? /*#__PURE__*/
        (0, _jsxRuntime.jsx)(InlineTooltip, { variant: _tooltip.TooltipVariant.Dark, content: node.tooltipContent, children:
          tag }, "".concat(node.key, "__tooltip")) :


        tag;

      }) }));


};exports.SelectedNodes = SelectedNodes;