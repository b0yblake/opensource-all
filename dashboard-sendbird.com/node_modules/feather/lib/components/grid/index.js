"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.array.slice.js");require("core-js/modules/es.object.freeze.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/es.weak-map.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.symbol.iterator.js");Object.defineProperty(exports, "__esModule", { value: true });exports.GridItem = exports.Grid = void 0;require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.concat.js");var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _media = require("../../../lib/media");var _templateObject;function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _taggedTemplateLiteral(strings, raw) {if (!raw) {raw = strings.slice(0);}return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));}




































var generateMediaGridItem = function generateMediaGridItem(mediaProps) {
  var validMediaKeys = [];

  if (mediaProps.xl) {
    validMediaKeys.push('xl');
  }

  if (mediaProps.lg) {
    validMediaKeys.push('lg');
  }

  if (mediaProps.md) {
    validMediaKeys.push('md');
  }

  if (mediaProps.sm) {
    validMediaKeys.push('sm');
  }

  return validMediaKeys.
  map(function (key) {
    var media = mediaProps[key];
    return (0, _styledComponents.css)(["", ";"],
    _media.mediaQuery[key](_templateObject || (_templateObject = _taggedTemplateLiteral(["\n          justify-self: ", ";\n          align-self: ", ";\n          grid-column-start: ", ";\n          grid-column-end: ", ";\n          grid-row-start: ", ";\n          grid-row-end: span ", ";\n        "])),
    media.justifySelf || 'stretch',
    media.alignSelf ? media.alignSelf : 'stretch',
    media.colStart || 'auto',
    media.colSpan ? "span ".concat(media.colSpan) : null,
    media.rowStart || 'auto',
    media.rowSpan ? media.rowSpan : 1));


  }).
  reduce(
  function (acc, curr) {return (0, _styledComponents.css)(["", " ", ""],
    acc,
    curr);}, (0,

  _styledComponents.css)([""]));

};

var Grid = _styledComponents.default.div.withConfig({ displayName: "grid__Grid", componentId: "z8qknf-0" })(["display:", ";grid-template-columns:repeat(", ",1fr);grid-gap:", ";justify-items:stretch;align-items:stretch;justify-content:stretch;align-content:stretch;"],
function (props) {return props.displayType || 'grid';},
function (props) {return props.templateColumn || 12;},
function (props) {
  if (props.gap && typeof props.gap !== 'number' && props.gap.length === 2) {
    return "".concat(props.gap[0], " ").concat(props.gap[1]);
  }

  if (typeof props.gap === 'number') {
    return "".concat(props.gap, "px");
  }

  return '32px';
});exports.Grid = Grid;






var GridItem = _styledComponents.default.div.withConfig({ displayName: "grid__GridItem", componentId: "z8qknf-1" })(["justify-self:", ";align-self:", ";grid-column-start:", ";grid-column-end:", ";grid-row-start:", ";grid-row-end:span ", ";min-width:0;", ";"],
function (props) {return props.justifySelf ? props.justifySelf : 'stretch';},
function (props) {return props.alignSelf ? props.alignSelf : 'stretch';},
function (props) {return props.colStart || 'auto';},
function (props) {return props.colSpan ? "span ".concat(props.colSpan) : null;},
function (props) {return props.rowStart || 'auto';},
function (props) {return props.rowSpan ? props.rowSpan : 1;},


function (props) {return generateMediaGridItem({ xl: props.xl, lg: props.lg, md: props.md, sm: props.sm });});exports.GridItem = GridItem;