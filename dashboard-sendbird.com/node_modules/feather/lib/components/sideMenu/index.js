"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.object.keys.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.array.slice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.weak-map.js");Object.defineProperty(exports, "__esModule", { value: true });exports.SideMenu = exports.createSideMenuItemSub = exports.createSideMenuItemExpandable = exports.createSideMenuItemWithCount = exports.createSideMenuItemDefault = void 0;require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.array.includes.js");require("core-js/modules/es.string.includes.js");require("core-js/modules/es.array.concat.js");require("core-js/modules/es.array.find.js");var _react = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _reactTransitionGroup = require("react-transition-group");
var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));
var _resizeObserver = require("resize-observer");

var _animation = require("../../../lib/animation");
var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));
var _types = require("../../../lib/types");










var _typography = require("../../../lib/typography");

var _icon = require("../icon");
var _ScrollBar = require("../ScrollBar");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

var transitionTimeInMs = 150;

var Container = _styledComponents.default.nav.withConfig({ displayName: "sideMenu__Container", componentId: "sc-1kjc7nk-0" })(["display:flex;flex-direction:column;align-items:stretch;width:232px;box-shadow:inset -1px 0 ", ";padding:8px 0;.SubMenuItemTransition-enter{opacity:0;}.SubMenuItemTransition-enter-active{opacity:1;transition:opacity ", "ms ", ";}.SubMenuItemTransition-exit{opacity:1;}.SubMenuItemTransition-exit-active{opacity:0;transition:opacity ", "ms ", ";}"],




(0, _cssVariables.default)('neutral-2'),








transitionTimeInMs, _animation.transitionDefault,








transitionTimeInMs, _animation.transitionDefault);



var TitleContainer = _styledComponents.default.div.withConfig({ displayName: "sideMenu__TitleContainer", componentId: "sc-1kjc7nk-1" })(["display:flex;flex-direction:row;align-items:center;height:40px;padding:0 28px;user-select:none;"]);








var Title = _styledComponents.default.h5.withConfig({ displayName: "sideMenu__Title", componentId: "sc-1kjc7nk-2" })(["font-size:16px;line-height:20px;letter-spacing:-0.15px;color:", ";font-weight:600;"],



(0, _cssVariables.default)('neutral-10'));



var TitleActionContainer = _styledComponents.default.div.withConfig({ displayName: "sideMenu__TitleActionContainer", componentId: "sc-1kjc7nk-3" })(["display:flex;flex-direction:row;margin-left:auto;"]);





var MenuItemListScrollBar = (0, _styledComponents.default)(_ScrollBar.ScrollBar).withConfig({ displayName: "sideMenu__MenuItemListScrollBar", componentId: "sc-1kjc7nk-4" })(["padding:8px 16px 0;flex:1;"]);




var MenuItemList = _styledComponents.default.ul.withConfig({ displayName: "sideMenu__MenuItemList", componentId: "sc-1kjc7nk-5" })(["padding:0;margin:0;list-style:none;"]);





var menuItemCSS = (0, _styledComponents.css)(["display:flex;flex-direction:row;align-items:center;height:40px;padding:0 12px;", " color:", ";border-radius:4px;transition:", "ms ", ";transition-property:background-color;user-select:none;outline:none;text-decoration:none !important;&[data-clickable='true']{cursor:pointer;:hover,:focus{background-color:", ";}}&[aria-current='page']{background-color:", " !important;color:", ";font-weight:600;}"],





_typography.Subtitles['subtitle-01'],
(0, _cssVariables.default)('neutral-10'),

transitionTimeInMs, _animation.transitionDefault,










(0, _cssVariables.default)('neutral-1'),




(0, _cssVariables.default)('neutral-2'),
(0, _cssVariables.default)('purple-7'));




var MenuItem = _styledComponents.default.li.withConfig({ displayName: "sideMenu__MenuItem", componentId: "sc-1kjc7nk-6" })(["", ""],
menuItemCSS);


var MenuItemLink = _styledComponents.default.a.withConfig({ displayName: "sideMenu__MenuItemLink", componentId: "sc-1kjc7nk-7" })(["", ""],
menuItemCSS);


var MenuItemReactRouterLink = (0, _styledComponents.default)(_reactRouterDom.Link).withConfig({ displayName: "sideMenu__MenuItemReactRouterLink", componentId: "sc-1kjc7nk-8" })(["", ""],
menuItemCSS);


var SubMenuItem = (0, _styledComponents.default)(MenuItem).withConfig({ displayName: "sideMenu__SubMenuItem", componentId: "sc-1kjc7nk-9" })(["font-weight:400;padding-left:", "px;"],

function (_ref) {var isParentExpandable = _ref.isParentExpandable;return isParentExpandable ? 34 : 20;});


var ExpandableMenuItem = (0, _styledComponents.default)(MenuItem).withConfig({ displayName: "sideMenu__ExpandableMenuItem", componentId: "sc-1kjc7nk-10" })(["", " + &{margin-top:8px;}", ";"],
SubMenuItem,



function (_ref2) {var hasParent = _ref2.hasParent;return (
    hasParent && (0,
    _styledComponents.css)(["padding-left:20px;font-weight:400;", " + &{margin-top:0;}"],



    SubMenuItem));});





var MenuItemContainer = _styledComponents.default.div.withConfig({ displayName: "sideMenu__MenuItemContainer", componentId: "sc-1kjc7nk-11" })(["display:flex;align-items:center;transition:inherit;transition-property:inherit;"]);






var MenuItemLabel = _styledComponents.default.span.withConfig({ displayName: "sideMenu__MenuItemLabel", componentId: "sc-1kjc7nk-12" })(["transition:inherit;transition-property:inherit;margin-top:0.083em;"]);








var ExpandChevronDownIcon = (0, _styledComponents.default)(_icon.Icon).withConfig({ displayName: "sideMenu__ExpandChevronDownIcon", componentId: "sc-1kjc7nk-13" })(["margin:4px;transform:rotate(", "deg);transition:", "ms transform ", ";"],

function (props) {return props.isExpanded ? 0 : -90;},
transitionTimeInMs, _animation.transitionDefault);


var MenuItemCount = _styledComponents.default.span.withConfig({ displayName: "sideMenu__MenuItemCount", componentId: "sc-1kjc7nk-14" })(["margin-left:auto;"]);



var createSideMenuItemDefault = function createSideMenuItemDefault(params) {return _objectSpread({
    type: _types.SideMenuItemType.Default },
  params);};exports.createSideMenuItemDefault = createSideMenuItemDefault;


var createSideMenuItemWithCount = function createSideMenuItemWithCount(params) {return _objectSpread({
    type: _types.SideMenuItemType.WithCount },
  params);};exports.createSideMenuItemWithCount = createSideMenuItemWithCount;


var createSideMenuItemExpandable = function createSideMenuItemExpandable(params) {return _objectSpread({
    type: _types.SideMenuItemType.Expandable },
  params);};exports.createSideMenuItemExpandable = createSideMenuItemExpandable;


var createSideMenuItemSub = function createSideMenuItemSub(params) {return _objectSpread({
    type: _types.SideMenuItemType.Sub },
  params);};exports.createSideMenuItemSub = createSideMenuItemSub;


var isExpandedExpandableMenuItem = function isExpandedExpandableMenuItem(item) {return (
    item.type === _types.SideMenuItemType.Expandable && item.isExpanded);};

var SideMenu = function SideMenu(_ref3)





{var title = _ref3.title,titleAction = _ref3.titleAction,activeItemKey = _ref3.activeItemKey,items = _ref3.items,containerAttributes = _objectWithoutProperties(_ref3, ["title", "titleAction", "activeItemKey", "items"]);
  var _useState = (0, _react.useState)(
  items.filter(isExpandedExpandableMenuItem).map(function (item) {return item.key;})),_useState2 = _slicedToArray(_useState, 2),expandedKeys = _useState2[0],setExpandedKeys = _useState2[1];

  var previousItems = (0, _react.useRef)(items);
  var scrollBarRef = (0, _react.useRef)(null);
  var menuItemListRef = (0, _react.useRef)(null);
  var resizeObserverRef = (0, _react.useRef)(
  new _resizeObserver.ResizeObserver(function () {
    if (scrollBarRef.current) {
      scrollBarRef.current.update();
    }
  }));


  (0, _react.useEffect)(function () {
    var resizeObserver = resizeObserverRef.current;
    if (menuItemListRef.current) {
      resizeObserver.observe(menuItemListRef.current);
    }
    return function () {return resizeObserver.disconnect();};
  });

  (0, _react.useEffect)(function () {
    if (!(0, _isEqual.default)(items, previousItems.current)) {
      // items prop has been replaced.
      setExpandedKeys(items.filter(isExpandedExpandableMenuItem).map(function (item) {return item.key;}));
    }
    previousItems.current = items;
  }, [items]);

  var onMenuItemClick = function onMenuItemClick(item) {return function () {
      if (item.onClick) {
        item.onClick();
      }
    };};

  var onMenuItemKeyPress = function onMenuItemKeyPress(item) {return function (e) {
      if (e.key === 'Enter' || e.key === ' ') {
        onMenuItemClick(item)();
      }
    };};

  var onExpandableItemClick = (0, _react.useCallback)(
  function (item) {return function () {
      var key = item.key,onClick = item.onClick;
      var isExpanded = expandedKeys.includes(key);
      if (!key) {
        return;
      }
      setExpandedKeys(function (expandedKeys) {
        if (isExpanded) {
          return expandedKeys.filter(function (item) {return item !== key;});
        }
        return expandedKeys.concat([key]);
      });
      onClick && onClick();
    };},
  [expandedKeys]);


  var onExpandableItemKeyPress = function onExpandableItemKeyPress(item) {return function (e) {
      if (e.key === 'Enter' || e.key === ' ') {
        onExpandableItemClick(item)();
      }
    };};

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsxs)(Container, _objectSpread(_objectSpread({}, containerAttributes), {}, { children: [/*#__PURE__*/
      (0, _jsxRuntime.jsxs)(TitleContainer, { children: [/*#__PURE__*/
        (0, _jsxRuntime.jsx)(Title, { children: title }), /*#__PURE__*/
        (0, _jsxRuntime.jsx)(TitleActionContainer, { children: titleAction })] }), /*#__PURE__*/

      (0, _jsxRuntime.jsx)(MenuItemListScrollBar, { ref: scrollBarRef, children: /*#__PURE__*/
        (0, _jsxRuntime.jsx)(MenuItemList, { ref: menuItemListRef, children: /*#__PURE__*/
          (0, _jsxRuntime.jsx)(_reactTransitionGroup.TransitionGroup, { className: "sub", children:
            items.map(function (item) {
              switch (item.type) {
                case _types.SideMenuItemType.Default:
                case _types.SideMenuItemType.WithCount:{
                    var isClickable = !!item.onClick || !!item.href;
                    var menuItemProps = {
                      key: item.key,
                      onClick: onMenuItemClick(item),
                      'aria-current': activeItemKey === item.key ? 'page' : undefined,
                      'data-clickable': isClickable,
                      tabIndex: 0,
                      onKeyPress: onMenuItemKeyPress(item) };

                    if (item.href) {
                      if (item.useReactRouterLink) {
                        return /*#__PURE__*/(
                          (0, _jsxRuntime.jsx)(MenuItemReactRouterLink, _objectSpread(_objectSpread({}, menuItemProps), {}, { to: item.href, children: /*#__PURE__*/
                            (0, _jsxRuntime.jsxs)(MenuItemContainer, { children: [/*#__PURE__*/
                              (0, _jsxRuntime.jsx)(MenuItemLabel, { children: item.label }),
                              item.labelSuffixNode] }) })));



                      }
                      return /*#__PURE__*/(
                        (0, _jsxRuntime.jsx)(MenuItemLink, _objectSpread(_objectSpread({}, menuItemProps), {}, { href: item.href, children: /*#__PURE__*/
                          (0, _jsxRuntime.jsxs)(MenuItemContainer, { children: [/*#__PURE__*/
                            (0, _jsxRuntime.jsx)(MenuItemLabel, { children: item.label }),
                            item.labelSuffixNode] }) })));



                    }
                    return /*#__PURE__*/(
                      (0, _jsxRuntime.jsxs)(MenuItem, _objectSpread(_objectSpread({}, menuItemProps), {}, { children: [/*#__PURE__*/
                        (0, _jsxRuntime.jsxs)(MenuItemContainer, { children: [/*#__PURE__*/
                          (0, _jsxRuntime.jsx)(MenuItemLabel, { children: item.label }),
                          item.labelSuffixNode] }),

                        item.type === _types.SideMenuItemType.WithCount && /*#__PURE__*/(0, _jsxRuntime.jsx)(MenuItemCount, { children: item.count })] })));


                  }

                case _types.SideMenuItemType.Expandable:{
                    var isExpanded = expandedKeys.includes(item.key);
                    var hasParent = item.parentKey !== undefined;
                    var isParentExpended = !!item.parentKey && expandedKeys.includes(item.parentKey);

                    // onMouseUp clear the background color after a click.
                    var onMouseUp = function onMouseUp(_ref4) {var currentTarget = _ref4.currentTarget;
                      currentTarget.blur();
                    };

                    if (!hasParent || isParentExpended) {
                      return /*#__PURE__*/(
                        (0, _jsxRuntime.jsx)(_reactTransitionGroup.CSSTransition, { timeout: transitionTimeInMs, classNames: "SubMenuItemTransition", children: /*#__PURE__*/
                          (0, _jsxRuntime.jsxs)(ExpandableMenuItem, {

                            "aria-current": activeItemKey === item.key ? 'page' : undefined,
                            hasParent: hasParent,
                            onClick: onExpandableItemClick(item),
                            onMouseUp: onMouseUp,
                            onKeyPress: onExpandableItemKeyPress(item),
                            "data-clickable": true,
                            tabIndex: 0, children: [/*#__PURE__*/

                            (0, _jsxRuntime.jsx)(MenuItemLabel, { children: item.label }),
                            item.labelSuffixNode, /*#__PURE__*/
                            (0, _jsxRuntime.jsx)(ExpandChevronDownIcon, {
                              isExpanded: isExpanded,
                              icon: "chevron-down",
                              size: 16,
                              color: (0, _cssVariables.default)('neutral-10') })] }, item.key) }, item.key));




                    }

                    return null;
                  }
                case _types.SideMenuItemType.Sub:{
                    var parentItem = items.find(function (menuItem) {return menuItem.key === item.parentKey;});
                    var expandableGrandParentItem = items.find(
                    function (menuItem) {return (
                        (parentItem === null || parentItem === void 0 ? void 0 : parentItem.type) === _types.SideMenuItemType.Expandable &&
                        menuItem.type === _types.SideMenuItemType.Expandable &&
                        menuItem.key === parentItem.parentKey);});


                    if (
                    expandedKeys.includes(item.parentKey) && (
                    !expandableGrandParentItem ||
                    expandableGrandParentItem && expandedKeys.includes(expandableGrandParentItem.key)))
                    {
                      return /*#__PURE__*/(
                        (0, _jsxRuntime.jsx)(_reactTransitionGroup.CSSTransition, { timeout: transitionTimeInMs, classNames: "SubMenuItemTransition", children: /*#__PURE__*/
                          (0, _jsxRuntime.jsxs)(SubMenuItem, {
                            "aria-current": activeItemKey === item.key ? 'page' : undefined,
                            onClick: onMenuItemClick(item),
                            "data-clickable": !!item.onClick || !!item.href,
                            tabIndex: 0,
                            isParentExpandable:
                            (parentItem === null || parentItem === void 0 ? void 0 : parentItem.type) === _types.SideMenuItemType.Expandable && !!parentItem.parentKey,

                            onKeyPress: onMenuItemKeyPress(item), children: [/*#__PURE__*/

                            (0, _jsxRuntime.jsx)(MenuItemLabel, { children: item.label }),
                            item.labelSuffixNode] }) }, item.key));



                    }
                    return null;
                  }
                default:
                  return null;}

            }) }) }) })] })));





};exports.SideMenu = SideMenu;