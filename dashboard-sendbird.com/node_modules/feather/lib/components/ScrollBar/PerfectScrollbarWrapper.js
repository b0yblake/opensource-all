"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.object.keys.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/es.weak-map.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.symbol.iterator.js");Object.defineProperty(exports, "__esModule", { value: true });exports.PerfectScrollbarWrapper = void 0;var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));
var _perfectScrollbar = _interopRequireDefault(require("perfect-scrollbar"));

var _animation = require("../../../lib/animation");
var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));

var _zIndexes = require("../../../lib/zIndexes");

var ScrollFunctionFactory = _interopRequireWildcard(require("./ScrollFunctionFactory"));var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}








var Container = _styledComponents.default.div.withConfig({ displayName: "PerfectScrollbarWrapper__Container", componentId: "sc-1r9h397-0" })(["position:relative;width:100%;height:100%;overflow:hidden;overflow-anchor:none;-ms-overflow-style:none;touch-action:auto;-ms-touch-action:auto;&.ps--active-x > .ps__rail-x,&.ps--active-y > .ps__rail-y{display:block;background-color:transparent;z-index:", ";}.ps__rail-x{display:none;opacity:0;height:6px;bottom:0px;position:absolute;}.ps__rail-y{display:none;opacity:0;width:6px;right:0;position:absolute;}&:hover > .ps__rail-x,&:hover > .ps__rail-y{display:block;background-color:transparent;opacity:0.6;}&.ps--focus > .ps__rail-x,&.ps--focus > .ps__rail-y,&.ps--scrolling-x > .ps__rail-x,&.ps--scrolling-y > .ps__rail-y{opacity:0.6;}.ps__rail-x:hover,.ps__rail-y:hover,.ps__rail-x:focus,.ps__rail-y:focus,.ps__rail-x.ps--clicking,.ps__rail-y.ps--clicking{}.ps__thumb-x{background-color:", ";border-radius:6px;transition:background-color 0.2s ", ",height 0.2s ", ";-webkit-transition:background-color 0.2s ", ",height 0.2s ", ";height:6px;bottom:2px;position:absolute;}.ps__thumb-y{background-color:", ";border-radius:6px;transition:background-color 0.2s ", ",width 0.2s ", ";-webkit-transition:background-color 0.2s ", ",width 0.2s ", ";width:6px;right:2px;position:absolute;}.ps__rail-x:hover > .ps__thumb-x,.ps__rail-x:focus > .ps__thumb-x,.ps__rail-x.ps--clicking .ps__thumb-x{background-color:", ";}.ps__rail-y:hover > .ps__thumb-y,.ps__rail-y:focus > .ps__thumb-y,.ps__rail-y.ps--clicking .ps__thumb-y{background-color:", ";}@supports (-ms-overflow-style:none){overflow:auto !important;}@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){overflow:auto !important;}"],













_zIndexes.ZIndexes.scrollBarRail,











































(0, _cssVariables.default)('neutral-3'),

_animation.transitionDefault, _animation.transitionDefault,
_animation.transitionDefault, _animation.transitionDefault,








(0, _cssVariables.default)('neutral-3'),

_animation.transitionDefault, _animation.transitionDefault,
_animation.transitionDefault, _animation.transitionDefault,










(0, _cssVariables.default)('neutral-6'),





(0, _cssVariables.default)('neutral-6'));












var useMemoizedOptions = function useMemoizedOptions(options) {
  var ref = (0, _react.useRef)();
  var isEqualToPreviousValue = (0, _isEqual.default)(ref.current, options);

  (0, _react.useEffect)(function () {
    if (!isEqualToPreviousValue) {
      ref.current = options;
    }
  });

  return isEqualToPreviousValue ? ref.current : options;
};

var PerfectScrollbarWrapper = /*#__PURE__*/_react.default.forwardRef(
function (_ref, ref) {var children = _ref.children,className = _ref.className,style = _ref.style,onScroll = _ref.onScroll,optionsProp = _ref.options;
  var container = (0, _react.useRef)(null);
  var ps = (0, _react.useRef)();
  var onScrollRef = (0, _react.useRef)();
  var options = useMemoizedOptions(optionsProp);

  var updateRefFactory = function updateRefFactory(ref) {return function (container) {
      var clientHeight = container.clientHeight,scrollHeight = container.scrollHeight,scrollTop = container.scrollTop;

      var scrollTo = ScrollFunctionFactory.scrollTo(container);
      var scrollBy = ScrollFunctionFactory.scrollBy(container);

      var handler = {
        clientHeight: clientHeight,
        scrollHeight: scrollHeight,
        scrollTop: scrollTop,
        scrollTo: scrollTo,
        scrollToTop: function scrollToTop(options) {return scrollTo({ left: 0, top: 0, behavior: options === null || options === void 0 ? void 0 : options.behavior });},
        scrollToBottom: function scrollToBottom(options) {return scrollTo({ left: 0, top: scrollHeight, behavior: options === null || options === void 0 ? void 0 : options.behavior });},
        scrollBy: scrollBy,
        update: function update() {
          ps.current && ps.current.update();
        },
        node: container };


      var handlerRef = ref;
      if (handlerRef) {
        if (typeof ref === 'function') {
          ref(handler);
        } else {
          handlerRef.current = handler;
        }
      }
    };};

  var updateRef = (0, _react.useRef)(updateRefFactory(ref));

  (0, _react.useEffect)(function () {
    updateRef.current = updateRefFactory(ref);
  }, [ref]);

  (0, _react.useEffect)(function () {
    onScrollRef.current = onScroll;
  }, [onScroll]);

  (0, _react.useEffect)(function () {
    var currentContainer = container.current;
    var handleScroll = function handleScroll(event) {var _onScrollRef$current;
      if (container.current) {
        updateRef.current(container.current);
      }
      (_onScrollRef$current = onScrollRef.current) === null || _onScrollRef$current === void 0 ? void 0 : _onScrollRef$current.call(onScrollRef, event);
    };

    if (!ps.current && currentContainer) {
      ps.current = new _perfectScrollbar.default(currentContainer, _objectSpread(_objectSpread({}, options), {}, { minScrollbarLength: 40 }));

      updateRef.current(currentContainer);
    }
    if (currentContainer) {
      currentContainer.addEventListener('ps-scroll-y', handleScroll, false);
    }
    return function () {
      if (currentContainer) {
        currentContainer.removeEventListener('ps-scroll-y', handleScroll, false);
      }
    };
  }, [options]);

  (0, _react.useEffect)(function () {
    if (ps.current) {
      ps.current.update();
    }
  });

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(Container, {
      ref: container,
      className: className,
      style: _objectSpread(_objectSpread({},
      style), {}, {
        overflow: 'hidden' }), children:


      children }));


});exports.PerfectScrollbarWrapper = PerfectScrollbarWrapper;