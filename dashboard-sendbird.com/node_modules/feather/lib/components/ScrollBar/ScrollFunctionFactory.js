"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.scrollBy = exports.scrollTo = void 0;var scrollTo =
function scrollTo(container) {return (
    function () {for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {params[_key] = arguments[_key];}
      if (container.scrollTo) {
        container.scrollTo.apply(container, params);
        return;
      }
      if (params.length === 0) {
        return;
      }

      if (typeof params[0] === 'number' && params[1] === undefined) {
        throw new SyntaxError('Value could not be converted');
      }

      if (params[0].left) {
        container.scrollLeft = params[0].left;
      } else if (typeof params[0] === 'number') {
        container.scrollLeft = Math.floor(params[0]);
      }

      if (params[0].top) {
        container.scrollTop = params[0].top;
      } else if (typeof params[1] === 'number') {
        container.scrollTop = Math.floor(params[1]);
      }
    });};exports.scrollTo = scrollTo;

var scrollBy =
function scrollBy(container) {return (
    function () {for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {params[_key2] = arguments[_key2];}
      if (container.scrollBy) {
        container.scrollBy.apply(container, params);
        return;
      }
      if (params.length === 0) {
        return;
      }

      if (params[0].left) {
        container.scrollLeft = params[0].left + container.scrollLeft;
      } else if (typeof params[0] === 'number') {
        container.scrollLeft = Math.floor(params[0]) + container.scrollLeft;
      }

      if (params[0].top) {
        container.scrollTop = params[0].top + container.scrollTop;
      } else if (typeof params[1] === 'number') {
        container.scrollTop = Math.floor(params[1]) + container.scrollTop;
      }
    });};exports.scrollBy = scrollBy;