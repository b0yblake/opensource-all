"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.array.slice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.weak-map.js");require("core-js/modules/es.object.get-own-property-descriptor.js");Object.defineProperty(exports, "__esModule", { value: true });exports.Badge = void 0;require("core-js/modules/es.array.concat.js");require("core-js/modules/es.number.constructor.js");var _react = require("react");
var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _animation = require("../../../lib/animation");
var _spinner = require("../../../lib/components/spinner");
var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));
var _types = require("../../../lib/types");

var _icon = require("../icon");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}

var Container = _styledComponents.default.div.withConfig({ displayName: "badge__Container", componentId: "p0dgu1-0" })(["display:flex;align-items:center;justify-content:center;padding:0 8px;min-width:20px;height:20px;font-size:11px;line-height:1.09;font-weight:500;color:", ";letter-spacing:0.25px;text-align:center;border-radius:10px;white-space:nowrap;transform:scale(", ");transition:", ";", ""],











function (props) {return props.fontColor;},




function (_ref) {var isRemoved = _ref.isRemoved,isTransitioned = _ref.isTransitioned;return !isRemoved && !isTransitioned ? 1 : 0;},
(0, _animation.transitions)({ duration: 0.3, properties: ['transform'] }),

function (props) {
  if (props.variant === _types.BadgeVariant.Dark) {
    return (0, _styledComponents.css)(["background-color:", ";"],
    (0, _cssVariables.default)("".concat(props.color, "-").concat(props.color === 'neutral' ? 7 : 5)));

  }
  return (0, _styledComponents.css)(["background-color:", ";color:", ";"],
  (0, _cssVariables.default)([props.color, 2]),
  props.color === 'neutral' ? (0, _cssVariables.default)('neutral-7') : (0, _cssVariables.default)([props.color, 6]));

});


var SpinnerWrapper = _styledComponents.default.div.withConfig({ displayName: "badge__SpinnerWrapper", componentId: "p0dgu1-1" })(["width:24px;text-align:center;line-height:0;user-select:none;> *{display:inline-block;}"]);










var Button = _styledComponents.default.button.withConfig({ displayName: "badge__Button", componentId: "p0dgu1-2" })(["display:block;margin-left:2px;margin-right:-2px;padding:2px;font-size:0;border:0;outline:0;background:transparent;cursor:pointer;-webkit-appearance:none;"]);












var Badge = (0, _styledComponents.default)(
function (_ref2)









{var _ref2$count = _ref2.count,count = _ref2$count === void 0 ? 0 : _ref2$count,color = _ref2.color,_ref2$max = _ref2.max,max = _ref2$max === void 0 ? 999 : _ref2$max,_ref2$variant = _ref2.variant,variant = _ref2$variant === void 0 ? _types.BadgeVariant.Light : _ref2$variant,className = _ref2.className,_ref2$isRemovable = _ref2.isRemovable,isRemovable = _ref2$isRemovable === void 0 ? false : _ref2$isRemovable,_ref2$isLoading = _ref2.isLoading,isLoading = _ref2$isLoading === void 0 ? false : _ref2$isLoading,prefixNode = _ref2.prefixNode,onClose = _ref2.onClose;
  var _useState = (0, _react.useState)(true),_useState2 = _slicedToArray(_useState, 2),isRemoved = _useState2[0],setIsRemoved = _useState2[1];
  var _useState3 = (0, _react.useState)(false),_useState4 = _slicedToArray(_useState3, 2),isTransitioned = _useState4[0],setIsTransitioned = _useState4[1];

  var handleRemoveClick = (0, _react.useCallback)(
  function (event) {
    event.preventDefault();
    setIsTransitioned(true);
    setTimeout(function () {
      setIsRemoved(true);
      setIsTransitioned(false);
    }, 300);

    onClose === null || onClose === void 0 ? void 0 : onClose();
  },
  [onClose]);


  (0, _react.useEffect)(function () {
    setIsRemoved(false);
  }, []);

  var contentColor = 'white';
  if (variant === _types.BadgeVariant.Dark) {
    contentColor = color === 'yellow' ? (0, _cssVariables.default)('neutral-10') : 'white';
  } else {
    contentColor = color === 'neutral' ? (0, _cssVariables.default)('neutral-7') : (0, _cssVariables.default)([color, 6]);
  }

  if (isRemoved && isTransitioned) {
    return null;
  }

  var children = (0, _react.useMemo)(function () {
    if (isLoading) {
      return /*#__PURE__*/(
        (0, _jsxRuntime.jsx)(SpinnerWrapper, { children: /*#__PURE__*/
          (0, _jsxRuntime.jsx)(_spinner.Spinner, { stroke: contentColor, size: 12 }) }));


    }
    var refinedCount =
    count > max ? "".concat(Number(max).toLocaleString(), "+") : Number(count).toLocaleString();
    return /*#__PURE__*/(
      (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, { children: [
        refinedCount,
        isRemovable && /*#__PURE__*/
        (0, _jsxRuntime.jsx)(Button, { type: "button", onClick: handleRemoveClick, children: /*#__PURE__*/
          (0, _jsxRuntime.jsx)(_icon.Icon, { icon: "close", size: 12, color: contentColor }) })] }));




  }, [contentColor, count, handleRemoveClick, isLoading, isRemovable, max]);

  return /*#__PURE__*/(
    (0, _jsxRuntime.jsxs)(Container, {
      "data-test-id": "Badge",
      className: className,
      color: color,
      fontColor: contentColor,
      variant: variant,
      isRemoved: isRemoved,
      isTransitioned: isTransitioned, children: [

      prefixNode,
      children] }));


}).withConfig({ displayName: "badge__Badge", componentId: "p0dgu1-3" })([""]);exports.Badge = Badge;