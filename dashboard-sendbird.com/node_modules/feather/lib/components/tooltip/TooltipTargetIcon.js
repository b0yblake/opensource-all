"use strict";require("core-js/modules/es.symbol.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");Object.defineProperty(exports, "__esModule", { value: true });exports.TooltipTargetIcon = void 0;require("core-js/modules/es.object.keys.js");var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));

var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));


var _icon = require("../icon");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}

var Wrapper = _styledComponents.default.div.withConfig({ displayName: "TooltipTargetIcon__Wrapper", componentId: "sc-1lw71nh-0" })(["display:flex;align-items:center;justify-content:center;min-width:24px;min-height:24px;"]);









var TooltipTargetIcon = function TooltipTargetIcon(_ref) {var _ref$size = _ref.size,size = _ref$size === void 0 ? 16 : _ref$size,className = _ref.className,props = _objectWithoutProperties(_ref, ["size", "className"]);return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(Wrapper, { className: className, children: /*#__PURE__*/
      (0, _jsxRuntime.jsx)(_icon.Icon, _objectSpread({ size: size }, props)) }));};exports.TooltipTargetIcon = TooltipTargetIcon;



TooltipTargetIcon.defaultProps = {
  size: 16,
  color: (0, _cssVariables.default)('neutral-6') };