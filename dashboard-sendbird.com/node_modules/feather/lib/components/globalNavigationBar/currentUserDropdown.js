"use strict";function _typeof(obj) {"@babel/helpers - typeof";if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}require("core-js/modules/es.object.keys.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");require("core-js/modules/es.array.iterator.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/es.weak-map.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.symbol.iterator.js");Object.defineProperty(exports, "__esModule", { value: true });exports.CurrentUserDropdown = void 0;require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.map.js");var _react = _interopRequireDefault(require("react"));
var _reactPopper = require("react-popper");
var _reactRouterDom = require("react-router-dom");
var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _downshift = _interopRequireDefault(require("downshift"));

var _AvatarType = require("../../../lib/components/avatar/AvatarType");
var hideOutlineEventListeners = _interopRequireWildcard(require("../../../lib/components/button/hideOutlineEventListeners"));
var _elevation = require("../../../lib/elevation");
var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));

var _typography = require("../../../lib/typography");
var _zIndexes = require("../../../lib/zIndexes");

var _avatar = require("../avatar");
var _button = require("../button");var _jsxRuntime = require("react/jsx-runtime");function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}










var CurrentUserDropdownToggle = _styledComponents.default.button.withConfig({ displayName: "currentUserDropdown__CurrentUserDropdownToggle", componentId: "sc-1mzpcw8-0" })(["", " display:flex;flex-direction:row;align-items:center;height:40px;padding:0 8px;"],
(0, _button.generateButtonContainerStyle)({
  contentColor: 'white',
  disabledContentColor: 'white',
  bgColor: 'transparent',
  hoverBgColor: (0, _cssVariables.default)('purple-8'),
  activeBgColor: (0, _cssVariables.default)('purple-9'),
  pressedBgColor: (0, _cssVariables.default)('purple-8'),
  disabledBgColor: 'transparent',
  borderColor: 'transparent',
  disabledBorderColor: 'transparent',
  focusOutlineColor: 'white' }));









var OrganizationName = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__OrganizationName", componentId: "sc-1mzpcw8-1" })(["flex:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:120px;margin-right:8px;font-weight:500;"]);









var MenuContainer = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__MenuContainer", componentId: "sc-1mzpcw8-2" })(["display:flex;flex-direction:column;align-items:stretch;width:248px;border-radius:4px;background-color:white;", " z-index:", ";overflow:hidden;"],






_elevation.elevation.popover,
_zIndexes.ZIndexes.dropdownMenu);



var MenuOrganizationSection = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__MenuOrganizationSection", componentId: "sc-1mzpcw8-3" })(["border-bottom:1px solid ", ";padding-bottom:8px;"],
(0, _cssVariables.default)('neutral-3'));



var MenuUserSection = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__MenuUserSection", componentId: "sc-1mzpcw8-4" })(["padding-bottom:8px;"]);



var ProfileGrid = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__ProfileGrid", componentId: "sc-1mzpcw8-5" })(["display:grid;grid-template-columns:40px 1fr;grid-template-rows:21px 1fr;grid-gap:2px 12px;grid-template-areas:'avatar name' 'avatar key';align-content:center;padding:8px 16px;margin:8px 0;"]);












var ProfileGridAvatarArea = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__ProfileGridAvatarArea", componentId: "sc-1mzpcw8-6" })(["grid-area:avatar;"]);



var ProfileGridNameArea = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__ProfileGridNameArea", componentId: "sc-1mzpcw8-7" })(["grid-area:name;align-self:end;font-size:14px;line-height:20px;color:", ";font-weight:600;letter-spacing:-0.1px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;"],




(0, _cssVariables.default)('neutral-10'));







var ProfileGridKeyArea = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__ProfileGridKeyArea", componentId: "sc-1mzpcw8-8" })(["grid-area:key;align-self:start;font-size:12px;line-height:16px;color:", ";white-space:nowrap;text-overflow:ellipsis;overflow:hidden;"],




(0, _cssVariables.default)('neutral-7'));





var menuItemCSS = (0, _styledComponents.css)(["display:block;width:100%;padding:6px 16px;background-color:white;border:0;", " color:", " !important;text-decoration:none !important;text-align:left;cursor:pointer;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;"],





_typography.Subtitles['subtitle-01'],
(0, _cssVariables.default)('neutral-10'));








var MenuItem = _styledComponents.default.button.withConfig({ displayName: "currentUserDropdown__MenuItem", componentId: "sc-1mzpcw8-9" })(["", ""],
menuItemCSS);


var MenuItemLink = _styledComponents.default.a.withConfig({ displayName: "currentUserDropdown__MenuItemLink", componentId: "sc-1mzpcw8-10" })(["", ""],
menuItemCSS);


var MenuItemReactRouterLink = (0, _styledComponents.default)(_reactRouterDom.Link).withConfig({ displayName: "currentUserDropdown__MenuItemReactRouterLink", componentId: "sc-1mzpcw8-11" })(["", ""],
menuItemCSS);


var SectionDivider = _styledComponents.default.div.withConfig({ displayName: "currentUserDropdown__SectionDivider", componentId: "sc-1mzpcw8-12" })(["margin-top:8px;border-top:1px solid ", ";padding-top:8px;"],

(0, _cssVariables.default)('neutral-3'));



var onDownshiftSelect = function onDownshiftSelect(selectedItem) {
  if (selectedItem && selectedItem.onClick) {
    selectedItem.onClick();
  }
};

var CurrentUserDropdown = function CurrentUserDropdown(_ref)







{var className = _ref.className,user = _ref.user,organization = _ref.organization,userMenus = _ref.userMenus,organizationMenus = _ref.organizationMenus,downshiftProps = _ref.downshiftProps,popperProps = _ref.popperProps;
  return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(_downshift.default, _objectSpread(_objectSpread({ itemToString: function itemToString(item) {return item ? item.label : '';}, onSelect: onDownshiftSelect }, downshiftProps), {}, { children:
      function children(_ref2) {var getItemProps = _ref2.getItemProps,getMenuProps = _ref2.getMenuProps,isOpen = _ref2.isOpen,highlightedIndex = _ref2.highlightedIndex,getToggleButtonProps = _ref2.getToggleButtonProps;
        var renderMenuItem =
        function renderMenuItem() {var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;return (
            function (item, index) {
              var itemProps = getItemProps({
                key: item.label,
                index: index + offset,
                item: item,
                style: {
                  backgroundColor: highlightedIndex === index + offset ? (0, _cssVariables.default)('neutral-2') : 'white' } });


              var component = /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {});

              if (item.href) {
                if (item.useReactRouterLink) {
                  component = /*#__PURE__*/
                  (0, _jsxRuntime.jsx)(MenuItemReactRouterLink, _objectSpread(_objectSpread({}, itemProps), {}, { to: item.href, target: item.target, children:
                    item.label }));


                } else {
                  component = /*#__PURE__*/
                  (0, _jsxRuntime.jsx)(MenuItemLink, _objectSpread(_objectSpread({}, itemProps), {}, { href: item.href, target: item.target, children:
                    item.label }));


                }
              } else {
                component = /*#__PURE__*/(0, _jsxRuntime.jsx)(MenuItem, _objectSpread(_objectSpread({}, itemProps), {}, { children: item.label }));
              }
              return item.useDivider ? /*#__PURE__*/(0, _jsxRuntime.jsx)(SectionDivider, { children: component }) : component;
            });};

        /**
         * { suppressRefError: true } is added here because I can confirm the component has been working without
         * problems, and the warnings generated by `refKey` check make debugging harder. However, [the Downshift
         * documentation](https://github.com/downshift-js/downshift#getmenuprops) does not recommend to use this option,
         * and it's best to make the implementation follow the original pattern.
         */
        var _getMenuProps = getMenuProps(undefined, { suppressRefError: true }),menuPropsRef = _getMenuProps.ref,menuProps = _objectWithoutProperties(_getMenuProps, ["ref"]);

        return /*#__PURE__*/(
          (0, _jsxRuntime.jsx)("div", { className: className, children: /*#__PURE__*/
            (0, _jsxRuntime.jsxs)(_reactPopper.Manager, { children: [/*#__PURE__*/
              (0, _jsxRuntime.jsx)(_reactPopper.Reference, { children:
                function children(_ref3) {var ref = _ref3.ref;
                  return /*#__PURE__*/(
                    (0, _jsxRuntime.jsxs)(CurrentUserDropdownToggle, _objectSpread(_objectSpread(_objectSpread({
                      ref: ref,
                      "aria-pressed": isOpen },
                    getToggleButtonProps()),
                    hideOutlineEventListeners), {}, { children: [/*#__PURE__*/

                      (0, _jsxRuntime.jsx)(OrganizationName, { children: organization.name }), /*#__PURE__*/
                      (0, _jsxRuntime.jsx)(_avatar.Avatar, {
                        type: _AvatarType.AvatarType.Member,
                        profileID: user.email,
                        imageUrl: user.profileImageURL,
                        size: 32 })] })));



                } }),

              isOpen && /*#__PURE__*/
              (0, _jsxRuntime.jsx)(_reactPopper.Popper, _objectSpread(_objectSpread({
                placement: "bottom-end",
                modifiers: { flip: { behavior: ['bottom'] } },
                innerRef: menuPropsRef },
              popperProps), {}, { children:

                function children(_ref4) {var ref = _ref4.ref,style = _ref4.style;
                  return /*#__PURE__*/(
                    (0, _jsxRuntime.jsxs)(MenuContainer, _objectSpread(_objectSpread({}, menuProps), {}, { ref: ref, style: style, children: [/*#__PURE__*/
                      (0, _jsxRuntime.jsxs)(MenuOrganizationSection, { children: [/*#__PURE__*/
                        (0, _jsxRuntime.jsxs)(ProfileGrid, { children: [/*#__PURE__*/
                          (0, _jsxRuntime.jsx)(ProfileGridAvatarArea, { children: /*#__PURE__*/
                            (0, _jsxRuntime.jsx)(_avatar.Avatar, {
                              type: _AvatarType.AvatarType.Organization,
                              imageUrl: organization.profileImageURL,
                              profileID: organization.key,
                              size: 40 }) }), /*#__PURE__*/


                          (0, _jsxRuntime.jsx)(ProfileGridNameArea, { children: organization.name }), /*#__PURE__*/
                          (0, _jsxRuntime.jsx)(ProfileGridKeyArea, { children: organization.key })] }),

                        organizationMenus.map(renderMenuItem())] }), /*#__PURE__*/

                      (0, _jsxRuntime.jsxs)(ProfileGrid, { children: [/*#__PURE__*/
                        (0, _jsxRuntime.jsx)(ProfileGridAvatarArea, { children: /*#__PURE__*/
                          (0, _jsxRuntime.jsx)(_avatar.Avatar, {
                            type: _AvatarType.AvatarType.Member,
                            profileID: user.email,
                            imageUrl: user.profileImageURL,
                            size: 40 }) }), /*#__PURE__*/


                        (0, _jsxRuntime.jsx)(ProfileGridNameArea, { children: user.name }), /*#__PURE__*/
                        (0, _jsxRuntime.jsx)(ProfileGridKeyArea, { children: user.email })] }), /*#__PURE__*/

                      (0, _jsxRuntime.jsx)(MenuUserSection, { children: userMenus.map(renderMenuItem(organizationMenus.length)) })] })));


                } }))] }) }));





      } })));


};exports.CurrentUserDropdown = CurrentUserDropdown;