"use strict";require("core-js/modules/es.object.keys.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.get-own-property-descriptors.js");Object.defineProperty(exports, "__esModule", { value: true });exports.GNBOverflowMenu = void 0;var _styledComponents = _interopRequireDefault(require("styled-components"));

var _cssVariables = _interopRequireDefault(require("../../../lib/theme/cssVariables"));


var _button = require("../button");
var _OverflowMenu = require("../OverflowMenu");var _jsxRuntime = require("react/jsx-runtime");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

var StyleOverriddenOverflowMenu = (0, _styledComponents.default)(_OverflowMenu.OverflowMenu).withConfig({ displayName: "gnbOverflowMenu__StyleOverriddenOverflowMenu", componentId: "iun3d4-0" })(["", "{flex:none;width:40px;height:40px;", " svg{fill:white !important;}}"],
_button.IconButton,




(0, _button.generateButtonContainerStyle)({
  contentColor: 'white',
  disabledContentColor: 'white',
  bgColor: 'transparent',
  hoverBgColor: (0, _cssVariables.default)('purple-8'),
  activeBgColor: (0, _cssVariables.default)('purple-9'),
  pressedBgColor: (0, _cssVariables.default)('purple-8'),
  disabledBgColor: 'transparent',
  borderColor: 'transparent',
  disabledBorderColor: 'transparent',
  focusOutlineColor: 'white' }));








var GNBOverflowMenuStyleable = function GNBOverflowMenuStyleable(
props)


{
  return /*#__PURE__*/(
    (0, _jsxRuntime.jsx)(StyleOverriddenOverflowMenu, _objectSpread(_objectSpread({},
    props), {}, {
      iconButtonProps: props.iconButtonProps && _objectSpread(_objectSpread({}, props.iconButtonProps), {}, { size: 'small' }) })));


};

var GNBOverflowMenu = (0, _styledComponents.default)(GNBOverflowMenuStyleable).withConfig({ displayName: "gnbOverflowMenu__GNBOverflowMenu", componentId: "iun3d4-1" })([""]);exports.GNBOverflowMenu = GNBOverflowMenu;