"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.useFeatherTheme = exports.FeatherThemeContext = exports.FeatherThemeEnum = void 0;
var _react = require("react"); // @deprecated

/**
 * Global theme
 *
 * #### Why not use styled-components ThemeProvider?
 *
 * The project that imports Feather may already be using styled-components ThemeProvider. We don't want to have a
 * conflict between the theme of the project and the theme of Feather.
 */var

FeatherThemeEnum;exports.FeatherThemeEnum = FeatherThemeEnum;(function (FeatherThemeEnum) {FeatherThemeEnum["Default"] = "default";FeatherThemeEnum["Neutral"] = "neutral";FeatherThemeEnum["Purple"] = "purple";FeatherThemeEnum["Gray"] = "gray";})(FeatherThemeEnum || (exports.FeatherThemeEnum = FeatherThemeEnum = {}));






var FeatherThemeContext = /*#__PURE__*/(0, _react.createContext)(FeatherThemeEnum.Default);exports.FeatherThemeContext = FeatherThemeContext;

var useFeatherTheme = function useFeatherTheme() {return (0, _react.useContext)(FeatherThemeContext);};exports.useFeatherTheme = useFeatherTheme;