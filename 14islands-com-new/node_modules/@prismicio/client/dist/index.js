import _asyncToGenerator from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js";
import _construct from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/construct.js";
import _createClass from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/createClass.js";
import _classCallCheck from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";
import _inherits from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/inherits.js";
import _possibleConstructorReturn from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js";
import _getPrototypeOf from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js";
import _wrapNativeSuper from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js";
import _toConsumableArray from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";
import _defineProperty from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/defineProperty.js";
import _objectWithoutProperties from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";
var _excluded = ["predicates"],
    _excluded2 = ["limit"];
import _regeneratorRuntime from "/opt/build/repo/node_modules/@babel/runtime/regenerator/index.js";
import "core-js/modules/esnext.global-this.js";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

import * as prismicH from '@prismicio/helpers';

var getEndpoint = function getEndpoint(repositoryName) {
  return "https://".concat(repositoryName, ".cdn.prismic.io/api/v2");
};

var castArray = function castArray(a) {
  return Array.isArray(a) ? a : [a];
};

var RENAMED_PARAMS = {
  accessToken: "access_token"
};

var castOrderingToString = function castOrderingToString(ordering) {
  return typeof ordering === "string" ? ordering : [ordering.field, ordering.direction === "desc" ? ordering.direction : void 0].filter(Boolean).join(" ");
};

var _buildQueryURL = function buildQueryURL(endpoint, args) {
  var _a;

  var predicates = args.predicates,
      params = _objectWithoutProperties(args, _excluded);

  var url = new URL("documents/search", "".concat(endpoint, "/"));

  if (predicates) {
    var _iterator = _createForOfIteratorHelper(castArray(predicates)),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _predicate = _step.value;
        url.searchParams.append("q", "[".concat(_predicate, "]"));
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  for (var k in params) {
    var name = (_a = RENAMED_PARAMS[k]) != null ? _a : k;
    var value = params[k];

    if (name === "orderings") {
      var scopedValue = params[name];

      if (scopedValue != null) {
        var v = castArray(scopedValue).map(function (ordering) {
          return castOrderingToString(ordering);
        }).join(",");
        value = "[".concat(v, "]");
      }
    } else if (name === "routes") {
      if (typeof params[name] === "object") {
        value = JSON.stringify(castArray(params[name]));
      }
    }

    if (value != null) {
      url.searchParams.set(name, castArray(value).join(","));
    }
  }

  return url.toString();
};

var appendPredicates = function appendPredicates() {
  var objWithPredicates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var predicates = arguments.length > 1 ? arguments[1] : undefined;
  return _objectSpread(_objectSpread({}, objWithPredicates), {}, {
    predicates: [].concat(_toConsumableArray(objWithPredicates.predicates || []), _toConsumableArray(castArray(predicates)))
  });
};

var castThunk = function castThunk(a) {
  return typeof a === "function" ? a : function () {
    return a;
  };
};

var PrismicError = /*#__PURE__*/function (_Error) {
  _inherits(PrismicError, _Error);

  var _super = _createSuper(PrismicError);

  function PrismicError() {
    var _this;

    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "An invalid API response was returned";
    var url = arguments.length > 1 ? arguments[1] : undefined;
    var response = arguments.length > 2 ? arguments[2] : undefined;

    _classCallCheck(this, PrismicError);

    _this = _super.call(this, message);
    _this.url = url;
    _this.response = response;
    return _this;
  }

  return _createClass(PrismicError);
}( /*#__PURE__*/_wrapNativeSuper(Error));

var findRef = function findRef(refs, predicate) {
  var ref = refs.find(function (ref2) {
    return predicate(ref2);
  });

  if (!ref) {
    throw new PrismicError("Ref could not be found.", void 0, void 0);
  }

  return ref;
};

var findMasterRef = function findMasterRef(refs) {
  return findRef(refs, function (ref) {
    return ref.isMasterRef;
  });
};

var findRefByID = function findRefByID(refs, id) {
  return findRef(refs, function (ref) {
    return ref.id === id;
  });
};

var findRefByLabel = function findRefByLabel(refs, label) {
  return findRef(refs, function (ref) {
    return ref.label === label;
  });
};

var readValue = function readValue(value) {
  return value.replace(/%3B/g, ";");
};

var parse = function parse(cookieString) {
  var result = {};
  var cookies = cookieString.split("; ");

  var _iterator2 = _createForOfIteratorHelper(cookies),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _cookie = _step2.value;

      var parts = _cookie.split("=");

      var value = parts.slice(1).join("=");
      var name = readValue(parts[0]).replace(/%3D/g, "=");
      result[name] = readValue(value);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }

  return result;
};

var getAll = function getAll(cookieStore) {
  return parse(cookieStore);
};

var getCookie = function getCookie(name, cookieStore) {
  return getAll(cookieStore)[name];
};

var ForbiddenError = /*#__PURE__*/function (_PrismicError) {
  _inherits(ForbiddenError, _PrismicError);

  var _super2 = _createSuper(ForbiddenError);

  function ForbiddenError() {
    _classCallCheck(this, ForbiddenError);

    return _super2.apply(this, arguments);
  }

  return _createClass(ForbiddenError);
}(PrismicError);

var ParsingError = /*#__PURE__*/function (_PrismicError2) {
  _inherits(ParsingError, _PrismicError2);

  var _super3 = _createSuper(ParsingError);

  function ParsingError() {
    _classCallCheck(this, ParsingError);

    return _super3.apply(this, arguments);
  }

  return _createClass(ParsingError);
}(PrismicError);

var formatValue = function formatValue(value) {
  if (Array.isArray(value)) {
    return "[".concat(value.map(formatValue).join(", "), "]");
  }

  if (typeof value === "string") {
    return "\"".concat(value, "\"");
  }

  if (value instanceof Date) {
    return "".concat(value.getTime());
  }

  return "".concat(value);
};

var pathWithArgsPredicate = function pathWithArgsPredicate(name) {
  var fn = function fn(path) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var formattedArgs = args.map(formatValue).join(", ");
    var joiner = path && args.length ? ", " : "";
    return "[".concat(name, "(").concat(path).concat(joiner).concat(formattedArgs, ")]");
  };

  return fn;
};

var pathPredicate = function pathPredicate(name) {
  var predicateFn = pathWithArgsPredicate(name);

  var fn = function fn(path) {
    return predicateFn(path);
  };

  return fn;
};

var argsPredicate = function argsPredicate(name) {
  var predicateFn = pathWithArgsPredicate(name);

  var fn = function fn() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return predicateFn.apply(void 0, [""].concat(args));
  };

  return fn;
};

var predicate = {
  at: pathWithArgsPredicate("at"),
  not: pathWithArgsPredicate("not"),
  any: pathWithArgsPredicate("any"),
  in: pathWithArgsPredicate("in"),
  fulltext: pathWithArgsPredicate("fulltext"),
  has: pathPredicate("has"),
  missing: pathPredicate("missing"),
  similar: argsPredicate("similar"),
  geopointNear: pathWithArgsPredicate("geopoint.near"),
  numberLessThan: pathWithArgsPredicate("number.lt"),
  numberGreaterThan: pathWithArgsPredicate("number.gt"),
  numberInRange: pathWithArgsPredicate("number.inRange"),
  dateAfter: pathWithArgsPredicate("date.after"),
  dateBefore: pathWithArgsPredicate("date.before"),
  dateBetween: pathWithArgsPredicate("date.between"),
  dateDayOfMonth: pathWithArgsPredicate("date.day-of-month"),
  dateDayOfMonthAfter: pathWithArgsPredicate("date.day-of-month-after"),
  dateDayOfMonthBefore: pathWithArgsPredicate("date.day-of-month-before"),
  dateDayOfWeek: pathWithArgsPredicate("date.day-of-week"),
  dateDayOfWeekAfter: pathWithArgsPredicate("date.day-of-week-after"),
  dateDayOfWeekBefore: pathWithArgsPredicate("date.day-of-week-before"),
  dateMonth: pathWithArgsPredicate("date.month"),
  dateMonthAfter: pathWithArgsPredicate("date.month-after"),
  dateMonthBefore: pathWithArgsPredicate("date.month-before"),
  dateYear: pathWithArgsPredicate("date.year"),
  dateHour: pathWithArgsPredicate("date.hour"),
  dateHourAfter: pathWithArgsPredicate("date.hour-after"),
  dateHourBefore: pathWithArgsPredicate("date.hour-before")
};
var preview = "io.prismic.preview";
var cookie = /*#__PURE__*/Object.freeze({
  __proto__: null,
  preview: preview
});

var NotFoundError = /*#__PURE__*/function (_PrismicError3) {
  _inherits(NotFoundError, _PrismicError3);

  var _super4 = _createSuper(NotFoundError);

  function NotFoundError() {
    _classCallCheck(this, NotFoundError);

    return _super4.apply(this, arguments);
  }

  return _createClass(NotFoundError);
}(PrismicError);

var MAX_PAGE_SIZE = 100;
var REPOSITORY_CACHE_TTL = 5e3;
var GET_ALL_QUERY_DELAY = 500;
var RefStateMode;

(function (RefStateMode2) {
  RefStateMode2["Master"] = "Master";
  RefStateMode2["ReleaseID"] = "ReleaseID";
  RefStateMode2["ReleaseLabel"] = "ReleaseLabel";
  RefStateMode2["Manual"] = "Manual";
})(RefStateMode || (RefStateMode = {}));

var typePredicate = function typePredicate(documentType) {
  return predicate.at("document.type", documentType);
};

var everyTagPredicate = function everyTagPredicate(tags) {
  return predicate.at("document.tags", tags);
};

var someTagsPredicate = function someTagsPredicate(tags) {
  return predicate.any("document.tags", tags);
};

var createClient = function createClient() {
  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  return _construct(Client, args);
};

var Client = /*#__PURE__*/function () {
  function Client(endpoint) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Client);

    this.refState = {
      mode: RefStateMode.Master,
      autoPreviewsEnabled: true
    };
    this.cachedRepositoryExpiration = 0;

    if (process.env.NODE_ENV === "development" && /\.prismic\.io\/(?!api\/v2\/?)/.test(endpoint)) {
      throw new PrismicError("@prismicio/client only supports Prismic Rest API V2. Please use the getEndpoint helper to generate a valid Rest API V2 endpoint URL.", void 0, void 0);
    }

    this.endpoint = endpoint;
    this.accessToken = options.accessToken;
    this.routes = options.routes;
    this.defaultParams = options.defaultParams;

    if (options.ref) {
      this.queryContentFromRef(options.ref);
    }

    if (typeof options.fetch === "function") {
      this.fetchFn = options.fetch;
    } else if (typeof globalThis.fetch === "function") {
      this.fetchFn = globalThis.fetch;
    } else {
      throw new PrismicError("A valid fetch implementation was not provided. In environments where fetch is not available (including Node.js), a fetch implementation must be provided via a polyfill or the `fetch` option.", void 0, void 0);
    }

    if (this.fetchFn === globalThis.fetch) {
      this.fetchFn = this.fetchFn.bind(globalThis);
    }
  }

  _createClass(Client, [{
    key: "enableAutoPreviews",
    value: function enableAutoPreviews() {
      this.refState.autoPreviewsEnabled = true;
    }
  }, {
    key: "enableAutoPreviewsFromReq",
    value: function enableAutoPreviewsFromReq(req) {
      this.refState.httpRequest = req;
      this.refState.autoPreviewsEnabled = true;
    }
  }, {
    key: "disableAutoPreviews",
    value: function disableAutoPreviews() {
      this.refState.autoPreviewsEnabled = false;
    }
  }, {
    key: "query",
    value: function () {
      var _query = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(predicates, params) {
        var url;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.buildQueryURL(_objectSpread(_objectSpread({}, params), {}, {
                  predicates
                }));

              case 2:
                url = _context.sent;
                _context.next = 5;
                return this.fetch(url, params);

              case 5:
                return _context.abrupt("return", _context.sent);

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function query(_x, _x2) {
        return _query.apply(this, arguments);
      }

      return query;
    }()
  }, {
    key: "get",
    value: function () {
      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {
        var url;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.buildQueryURL(params);

              case 2:
                url = _context2.sent;
                _context2.next = 5;
                return this.fetch(url, params);

              case 5:
                return _context2.abrupt("return", _context2.sent);

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function get(_x3) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
  }, {
    key: "getFirst",
    value: function () {
      var _getFirst = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {
        var url, result, firstResult;
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.buildQueryURL(params);

              case 2:
                url = _context3.sent;
                _context3.next = 5;
                return this.fetch(url, params);

              case 5:
                result = _context3.sent;
                firstResult = result.results[0];

                if (!firstResult) {
                  _context3.next = 9;
                  break;
                }

                return _context3.abrupt("return", firstResult);

              case 9:
                throw new PrismicError("No documents were returned", url, void 0);

              case 10:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getFirst(_x4) {
        return _getFirst.apply(this, arguments);
      }

      return getFirst;
    }()
  }, {
    key: "dangerouslyGetAll",
    value: function () {
      var _dangerouslyGetAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
        var params,
            _params$limit,
            limit,
            actualParams,
            resolvedParams,
            documents,
            latestResult,
            page,
            _args4 = arguments;

        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                params = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};
                _params$limit = params.limit, limit = _params$limit === void 0 ? Infinity : _params$limit, actualParams = _objectWithoutProperties(params, _excluded2);
                resolvedParams = _objectSpread(_objectSpread({}, actualParams), {}, {
                  pageSize: actualParams.pageSize || MAX_PAGE_SIZE
                });
                documents = [];

              case 4:
                if (!((!latestResult || latestResult.next_page) && documents.length < limit)) {
                  _context4.next = 15;
                  break;
                }

                page = latestResult ? latestResult.page + 1 : void 0;
                _context4.next = 8;
                return this.get(_objectSpread(_objectSpread({}, resolvedParams), {}, {
                  page
                }));

              case 8:
                latestResult = _context4.sent;
                documents.push.apply(documents, _toConsumableArray(latestResult.results));

                if (!latestResult.next_page) {
                  _context4.next = 13;
                  break;
                }

                _context4.next = 13;
                return new Promise(function (res) {
                  return setTimeout(res, GET_ALL_QUERY_DELAY);
                });

              case 13:
                _context4.next = 4;
                break;

              case 15:
                return _context4.abrupt("return", documents.slice(0, limit));

              case 16:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function dangerouslyGetAll() {
        return _dangerouslyGetAll.apply(this, arguments);
      }

      return dangerouslyGetAll;
    }()
  }, {
    key: "getByID",
    value: function () {
      var _getByID = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, params) {
        return _regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.getFirst(appendPredicates(params, predicate.at("document.id", id)));

              case 2:
                return _context5.abrupt("return", _context5.sent);

              case 3:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function getByID(_x5, _x6) {
        return _getByID.apply(this, arguments);
      }

      return getByID;
    }()
  }, {
    key: "getByIDs",
    value: function () {
      var _getByIDs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(ids, params) {
        return _regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.get(appendPredicates(params, predicate.in("document.id", ids)));

              case 2:
                return _context6.abrupt("return", _context6.sent);

              case 3:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function getByIDs(_x7, _x8) {
        return _getByIDs.apply(this, arguments);
      }

      return getByIDs;
    }()
  }, {
    key: "getAllByIDs",
    value: function () {
      var _getAllByIDs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(ids, params) {
        return _regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.dangerouslyGetAll(appendPredicates(params, predicate.in("document.id", ids)));

              case 2:
                return _context7.abrupt("return", _context7.sent);

              case 3:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function getAllByIDs(_x9, _x10) {
        return _getAllByIDs.apply(this, arguments);
      }

      return getAllByIDs;
    }()
  }, {
    key: "getByUID",
    value: function () {
      var _getByUID = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(documentType, uid, params) {
        return _regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.getFirst(appendPredicates(params, [typePredicate(documentType), predicate.at("my.".concat(documentType, ".uid"), uid)]));

              case 2:
                return _context8.abrupt("return", _context8.sent);

              case 3:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function getByUID(_x11, _x12, _x13) {
        return _getByUID.apply(this, arguments);
      }

      return getByUID;
    }()
  }, {
    key: "getByUIDs",
    value: function () {
      var _getByUIDs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(documentType, uids, params) {
        return _regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.get(appendPredicates(params, [typePredicate(documentType), predicate.in("my.".concat(documentType, ".uid"), uids)]));

              case 2:
                return _context9.abrupt("return", _context9.sent);

              case 3:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function getByUIDs(_x14, _x15, _x16) {
        return _getByUIDs.apply(this, arguments);
      }

      return getByUIDs;
    }()
  }, {
    key: "getAllByUIDs",
    value: function () {
      var _getAllByUIDs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(documentType, uids, params) {
        return _regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.dangerouslyGetAll(appendPredicates(params, [typePredicate(documentType), predicate.in("my.".concat(documentType, ".uid"), uids)]));

              case 2:
                return _context10.abrupt("return", _context10.sent);

              case 3:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function getAllByUIDs(_x17, _x18, _x19) {
        return _getAllByUIDs.apply(this, arguments);
      }

      return getAllByUIDs;
    }()
  }, {
    key: "getSingle",
    value: function () {
      var _getSingle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(documentType, params) {
        return _regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.getFirst(appendPredicates(params, typePredicate(documentType)));

              case 2:
                return _context11.abrupt("return", _context11.sent);

              case 3:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function getSingle(_x20, _x21) {
        return _getSingle.apply(this, arguments);
      }

      return getSingle;
    }()
  }, {
    key: "getByType",
    value: function () {
      var _getByType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(documentType, params) {
        return _regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.get(appendPredicates(params, typePredicate(documentType)));

              case 2:
                return _context12.abrupt("return", _context12.sent);

              case 3:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function getByType(_x22, _x23) {
        return _getByType.apply(this, arguments);
      }

      return getByType;
    }()
  }, {
    key: "getAllByType",
    value: function () {
      var _getAllByType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(documentType, params) {
        return _regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return this.dangerouslyGetAll(appendPredicates(params, typePredicate(documentType)));

              case 2:
                return _context13.abrupt("return", _context13.sent);

              case 3:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function getAllByType(_x24, _x25) {
        return _getAllByType.apply(this, arguments);
      }

      return getAllByType;
    }()
  }, {
    key: "getByTag",
    value: function () {
      var _getByTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(tag, params) {
        return _regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this.get(appendPredicates(params, everyTagPredicate(tag)));

              case 2:
                return _context14.abrupt("return", _context14.sent);

              case 3:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function getByTag(_x26, _x27) {
        return _getByTag.apply(this, arguments);
      }

      return getByTag;
    }()
  }, {
    key: "getAllByTag",
    value: function () {
      var _getAllByTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(tag, params) {
        return _regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this.dangerouslyGetAll(appendPredicates(params, everyTagPredicate(tag)));

              case 2:
                return _context15.abrupt("return", _context15.sent);

              case 3:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function getAllByTag(_x28, _x29) {
        return _getAllByTag.apply(this, arguments);
      }

      return getAllByTag;
    }()
  }, {
    key: "getByEveryTag",
    value: function () {
      var _getByEveryTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(tags, params) {
        return _regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return this.get(appendPredicates(params, everyTagPredicate(tags)));

              case 2:
                return _context16.abrupt("return", _context16.sent);

              case 3:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));

      function getByEveryTag(_x30, _x31) {
        return _getByEveryTag.apply(this, arguments);
      }

      return getByEveryTag;
    }()
  }, {
    key: "getAllByEveryTag",
    value: function () {
      var _getAllByEveryTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(tags, params) {
        return _regeneratorRuntime.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _context17.next = 2;
                return this.dangerouslyGetAll(appendPredicates(params, everyTagPredicate(tags)));

              case 2:
                return _context17.abrupt("return", _context17.sent);

              case 3:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));

      function getAllByEveryTag(_x32, _x33) {
        return _getAllByEveryTag.apply(this, arguments);
      }

      return getAllByEveryTag;
    }()
  }, {
    key: "getBySomeTags",
    value: function () {
      var _getBySomeTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(tags, params) {
        return _regeneratorRuntime.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _context18.next = 2;
                return this.get(appendPredicates(params, someTagsPredicate(tags)));

              case 2:
                return _context18.abrupt("return", _context18.sent);

              case 3:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));

      function getBySomeTags(_x34, _x35) {
        return _getBySomeTags.apply(this, arguments);
      }

      return getBySomeTags;
    }()
  }, {
    key: "getAllBySomeTags",
    value: function () {
      var _getAllBySomeTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(tags, params) {
        return _regeneratorRuntime.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.dangerouslyGetAll(appendPredicates(params, someTagsPredicate(tags)));

              case 2:
                return _context19.abrupt("return", _context19.sent);

              case 3:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function getAllBySomeTags(_x36, _x37) {
        return _getAllBySomeTags.apply(this, arguments);
      }

      return getAllBySomeTags;
    }()
  }, {
    key: "getRepository",
    value: function () {
      var _getRepository = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {
        var url;
        return _regeneratorRuntime.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                url = new URL(this.endpoint);

                if (this.accessToken) {
                  url.searchParams.set("access_token", this.accessToken);
                }

                _context20.next = 4;
                return this.fetch(url.toString());

              case 4:
                return _context20.abrupt("return", _context20.sent);

              case 5:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));

      function getRepository() {
        return _getRepository.apply(this, arguments);
      }

      return getRepository;
    }()
  }, {
    key: "getRefs",
    value: function () {
      var _getRefs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {
        var repository;
        return _regeneratorRuntime.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                _context21.next = 2;
                return this.getRepository();

              case 2:
                repository = _context21.sent;
                return _context21.abrupt("return", repository.refs);

              case 4:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21, this);
      }));

      function getRefs() {
        return _getRefs.apply(this, arguments);
      }

      return getRefs;
    }()
  }, {
    key: "getRefByID",
    value: function () {
      var _getRefByID = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(id) {
        var refs;
        return _regeneratorRuntime.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                _context22.next = 2;
                return this.getRefs();

              case 2:
                refs = _context22.sent;
                return _context22.abrupt("return", findRefByID(refs, id));

              case 4:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22, this);
      }));

      function getRefByID(_x38) {
        return _getRefByID.apply(this, arguments);
      }

      return getRefByID;
    }()
  }, {
    key: "getRefByLabel",
    value: function () {
      var _getRefByLabel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(label) {
        var refs;
        return _regeneratorRuntime.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                _context23.next = 2;
                return this.getRefs();

              case 2:
                refs = _context23.sent;
                return _context23.abrupt("return", findRefByLabel(refs, label));

              case 4:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23, this);
      }));

      function getRefByLabel(_x39) {
        return _getRefByLabel.apply(this, arguments);
      }

      return getRefByLabel;
    }()
  }, {
    key: "getMasterRef",
    value: function () {
      var _getMasterRef = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24() {
        var refs;
        return _regeneratorRuntime.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                _context24.next = 2;
                return this.getRefs();

              case 2:
                refs = _context24.sent;
                return _context24.abrupt("return", findMasterRef(refs));

              case 4:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24, this);
      }));

      function getMasterRef() {
        return _getMasterRef.apply(this, arguments);
      }

      return getMasterRef;
    }()
  }, {
    key: "getReleases",
    value: function () {
      var _getReleases = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {
        var refs;
        return _regeneratorRuntime.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                _context25.next = 2;
                return this.getRefs();

              case 2:
                refs = _context25.sent;
                return _context25.abrupt("return", refs.filter(function (ref) {
                  return !ref.isMasterRef;
                }));

              case 4:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25, this);
      }));

      function getReleases() {
        return _getReleases.apply(this, arguments);
      }

      return getReleases;
    }()
  }, {
    key: "getReleaseByID",
    value: function () {
      var _getReleaseByID = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(id) {
        var releases;
        return _regeneratorRuntime.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                _context26.next = 2;
                return this.getReleases();

              case 2:
                releases = _context26.sent;
                return _context26.abrupt("return", findRefByID(releases, id));

              case 4:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26, this);
      }));

      function getReleaseByID(_x40) {
        return _getReleaseByID.apply(this, arguments);
      }

      return getReleaseByID;
    }()
  }, {
    key: "getReleaseByLabel",
    value: function () {
      var _getReleaseByLabel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(label) {
        var releases;
        return _regeneratorRuntime.wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                _context27.next = 2;
                return this.getReleases();

              case 2:
                releases = _context27.sent;
                return _context27.abrupt("return", findRefByLabel(releases, label));

              case 4:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27, this);
      }));

      function getReleaseByLabel(_x41) {
        return _getReleaseByLabel.apply(this, arguments);
      }

      return getReleaseByLabel;
    }()
  }, {
    key: "getTags",
    value: function () {
      var _getTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28() {
        var tagsForm, repository;
        return _regeneratorRuntime.wrap(function _callee28$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                _context28.prev = 0;
                _context28.next = 3;
                return this.getCachedRepositoryForm("tags");

              case 3:
                tagsForm = _context28.sent;
                _context28.next = 6;
                return this.fetch(tagsForm.action);

              case 6:
                return _context28.abrupt("return", _context28.sent);

              case 9:
                _context28.prev = 9;
                _context28.t0 = _context28["catch"](0);
                _context28.next = 13;
                return this.getRepository();

              case 13:
                repository = _context28.sent;
                return _context28.abrupt("return", repository.tags);

              case 15:
              case "end":
                return _context28.stop();
            }
          }
        }, _callee28, this, [[0, 9]]);
      }));

      function getTags() {
        return _getTags.apply(this, arguments);
      }

      return getTags;
    }()
  }, {
    key: "buildQueryURL",
    value: function () {
      var _buildQueryURL2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29() {
        var params,
            ref,
            integrationFieldsRef,
            _args29 = arguments;
        return _regeneratorRuntime.wrap(function _callee29$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                params = _args29.length > 0 && _args29[0] !== undefined ? _args29[0] : {};
                _context29.t0 = params.ref;

                if (_context29.t0) {
                  _context29.next = 6;
                  break;
                }

                _context29.next = 5;
                return this.getResolvedRefString();

              case 5:
                _context29.t0 = _context29.sent;

              case 6:
                ref = _context29.t0;
                _context29.t2 = params.integrationFieldsRef;

                if (_context29.t2) {
                  _context29.next = 12;
                  break;
                }

                _context29.next = 11;
                return this.getCachedRepository();

              case 11:
                _context29.t2 = _context29.sent.integrationFieldsRef;

              case 12:
                _context29.t1 = _context29.t2;

                if (_context29.t1) {
                  _context29.next = 15;
                  break;
                }

                _context29.t1 = void 0;

              case 15:
                integrationFieldsRef = _context29.t1;
                return _context29.abrupt("return", _buildQueryURL(this.endpoint, _objectSpread(_objectSpread(_objectSpread({}, this.defaultParams), params), {}, {
                  ref,
                  integrationFieldsRef,
                  routes: params.routes || this.routes,
                  accessToken: params.accessToken || this.accessToken
                })));

              case 17:
              case "end":
                return _context29.stop();
            }
          }
        }, _callee29, this);
      }));

      function buildQueryURL() {
        return _buildQueryURL2.apply(this, arguments);
      }

      return buildQueryURL;
    }()
  }, {
    key: "resolvePreviewURL",
    value: function () {
      var _resolvePreviewURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(args) {
        var _a, documentID, previewToken, searchParams, document;

        return _regeneratorRuntime.wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                documentID = args.documentID;
                previewToken = args.previewToken;

                if (typeof globalThis.location !== "undefined") {
                  searchParams = new URLSearchParams(globalThis.location.search);
                  documentID = documentID || searchParams.get("documentId") || void 0;
                  previewToken = previewToken || searchParams.get("token") || void 0;
                } else if ((_a = this.refState.httpRequest) == null ? void 0 : _a.query) {
                  documentID = documentID || this.refState.httpRequest.query.documentId;
                  previewToken = previewToken || this.refState.httpRequest.query.token;
                }

                if (!(documentID != null)) {
                  _context30.next = 10;
                  break;
                }

                _context30.next = 6;
                return this.getByID(documentID, {
                  ref: previewToken
                });

              case 6:
                document = _context30.sent;
                return _context30.abrupt("return", prismicH.asLink(document, args.linkResolver));

              case 10:
                return _context30.abrupt("return", args.defaultURL);

              case 11:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30, this);
      }));

      function resolvePreviewURL(_x42) {
        return _resolvePreviewURL.apply(this, arguments);
      }

      return resolvePreviewURL;
    }()
  }, {
    key: "queryLatestContent",
    value: function queryLatestContent() {
      this.refState.mode = RefStateMode.Master;
    }
  }, {
    key: "queryContentFromReleaseByID",
    value: function queryContentFromReleaseByID(releaseID) {
      this.refState = _objectSpread(_objectSpread({}, this.refState), {}, {
        mode: RefStateMode.ReleaseID,
        releaseID
      });
    }
  }, {
    key: "queryContentFromReleaseByLabel",
    value: function queryContentFromReleaseByLabel(releaseLabel) {
      this.refState = _objectSpread(_objectSpread({}, this.refState), {}, {
        mode: RefStateMode.ReleaseLabel,
        releaseLabel
      });
    }
  }, {
    key: "queryContentFromRef",
    value: function queryContentFromRef(ref) {
      this.refState = _objectSpread(_objectSpread({}, this.refState), {}, {
        mode: RefStateMode.Manual,
        ref
      });
    }
  }, {
    key: "getCachedRepository",
    value: function () {
      var _getCachedRepository = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31() {
        return _regeneratorRuntime.wrap(function _callee31$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                if (!(!this.cachedRepository || Date.now() >= this.cachedRepositoryExpiration)) {
                  _context31.next = 5;
                  break;
                }

                this.cachedRepositoryExpiration = Date.now() + REPOSITORY_CACHE_TTL;
                _context31.next = 4;
                return this.getRepository();

              case 4:
                this.cachedRepository = _context31.sent;

              case 5:
                return _context31.abrupt("return", this.cachedRepository);

              case 6:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee31, this);
      }));

      function getCachedRepository() {
        return _getCachedRepository.apply(this, arguments);
      }

      return getCachedRepository;
    }()
  }, {
    key: "getCachedRepositoryForm",
    value: function () {
      var _getCachedRepositoryForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(name) {
        var cachedRepository, form;
        return _regeneratorRuntime.wrap(function _callee32$(_context32) {
          while (1) {
            switch (_context32.prev = _context32.next) {
              case 0:
                _context32.next = 2;
                return this.getCachedRepository();

              case 2:
                cachedRepository = _context32.sent;
                form = cachedRepository.forms[name];

                if (form) {
                  _context32.next = 6;
                  break;
                }

                throw new PrismicError("Form with name \"".concat(name, "\" could not be found"), void 0, void 0);

              case 6:
                return _context32.abrupt("return", form);

              case 7:
              case "end":
                return _context32.stop();
            }
          }
        }, _callee32, this);
      }));

      function getCachedRepositoryForm(_x43) {
        return _getCachedRepositoryForm.apply(this, arguments);
      }

      return getCachedRepositoryForm;
    }()
  }, {
    key: "getResolvedRefString",
    value: function () {
      var _getResolvedRefString = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33() {
        var _a, _b, _c, previewRef, cachedRepository, refModeType, res;

        return _regeneratorRuntime.wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                if (!this.refState.autoPreviewsEnabled) {
                  _context33.next = 5;
                  break;
                }

                previewRef = void 0;

                if ((_a = globalThis.document) == null ? void 0 : _a.cookie) {
                  previewRef = getCookie(preview, globalThis.document.cookie);
                } else if ((_c = (_b = this.refState.httpRequest) == null ? void 0 : _b.headers) == null ? void 0 : _c.cookie) {
                  previewRef = getCookie(preview, this.refState.httpRequest.headers.cookie);
                }

                if (!previewRef) {
                  _context33.next = 5;
                  break;
                }

                return _context33.abrupt("return", previewRef);

              case 5:
                _context33.next = 7;
                return this.getCachedRepository();

              case 7:
                cachedRepository = _context33.sent;
                refModeType = this.refState.mode;

                if (!(refModeType === RefStateMode.ReleaseID)) {
                  _context33.next = 13;
                  break;
                }

                return _context33.abrupt("return", findRefByID(cachedRepository.refs, this.refState.releaseID).ref);

              case 13:
                if (!(refModeType === RefStateMode.ReleaseLabel)) {
                  _context33.next = 17;
                  break;
                }

                return _context33.abrupt("return", findRefByLabel(cachedRepository.refs, this.refState.releaseLabel).ref);

              case 17:
                if (!(refModeType === RefStateMode.Manual)) {
                  _context33.next = 23;
                  break;
                }

                _context33.next = 20;
                return castThunk(this.refState.ref)();

              case 20:
                res = _context33.sent;

                if (!(typeof res === "string")) {
                  _context33.next = 23;
                  break;
                }

                return _context33.abrupt("return", res);

              case 23:
                return _context33.abrupt("return", findMasterRef(cachedRepository.refs).ref);

              case 24:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33, this);
      }));

      function getResolvedRefString() {
        return _getResolvedRefString.apply(this, arguments);
      }

      return getResolvedRefString;
    }()
  }, {
    key: "fetch",
    value: function () {
      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34(url, _params) {
        var res, json;
        return _regeneratorRuntime.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                _context34.next = 2;
                return this.fetchFn(url);

              case 2:
                res = _context34.sent;
                _context34.prev = 3;
                _context34.next = 6;
                return res.json();

              case 6:
                json = _context34.sent;
                _context34.next = 16;
                break;

              case 9:
                _context34.prev = 9;
                _context34.t0 = _context34["catch"](3);

                if (!(res.status === 404)) {
                  _context34.next = 15;
                  break;
                }

                throw new NotFoundError("Prismic repository not found. Check that \"".concat(this.endpoint, "\" is pointing to the correct repository."), url, void 0);

              case 15:
                throw new PrismicError(void 0, url, void 0);

              case 16:
                _context34.t1 = res.status;
                _context34.next = _context34.t1 === 200 ? 19 : _context34.t1 === 400 ? 20 : _context34.t1 === 401 ? 21 : _context34.t1 === 403 ? 21 : 22;
                break;

              case 19:
                return _context34.abrupt("return", json);

              case 20:
                throw new ParsingError(json.message, url, json);

              case 21:
                throw new ForbiddenError("error" in json ? json.error : json.message, url, json);

              case 22:
                throw new PrismicError(void 0, url, json);

              case 23:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34, this, [[3, 9]]);
      }));

      function fetch(_x44, _x45) {
        return _fetch.apply(this, arguments);
      }

      return fetch;
    }()
  }]);

  return Client;
}();

var predicates = predicate;
var Predicates = predicate;
export { Client, ForbiddenError, NotFoundError, ParsingError, Predicates, PrismicError, _buildQueryURL as buildQueryURL, cookie, createClient, getEndpoint, predicate, predicates };