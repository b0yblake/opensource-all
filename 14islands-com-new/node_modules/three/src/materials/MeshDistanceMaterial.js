import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import { Material } from './Material.js';
import { Vector3 } from '../math/Vector3.js';
/**
 * parameters = {
 *
 *  referencePosition: <float>,
 *  nearDistance: <float>,
 *  farDistance: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>
 *
 * }
 */

var MeshDistanceMaterial = /*#__PURE__*/function (_Material) {
  _inheritsLoose(MeshDistanceMaterial, _Material);

  function MeshDistanceMaterial(parameters) {
    var _this;

    _this = _Material.call(this) || this;
    _this.type = 'MeshDistanceMaterial';
    _this.referencePosition = new Vector3();
    _this.nearDistance = 1;
    _this.farDistance = 1000;
    _this.map = null;
    _this.alphaMap = null;
    _this.displacementMap = null;
    _this.displacementScale = 1;
    _this.displacementBias = 0;
    _this.fog = false;

    _this.setValues(parameters);

    return _this;
  }

  var _proto = MeshDistanceMaterial.prototype;

  _proto.copy = function copy(source) {
    _Material.prototype.copy.call(this, source);

    this.referencePosition.copy(source.referencePosition);
    this.nearDistance = source.nearDistance;
    this.farDistance = source.farDistance;
    this.map = source.map;
    this.alphaMap = source.alphaMap;
    this.displacementMap = source.displacementMap;
    this.displacementScale = source.displacementScale;
    this.displacementBias = source.displacementBias;
    return this;
  };

  return MeshDistanceMaterial;
}(Material);

MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;
export { MeshDistanceMaterial };