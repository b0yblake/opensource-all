import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import { RGBAFormat, RGBFormat } from '../constants.js';
import { ImageLoader } from './ImageLoader.js';
import { Texture } from '../textures/Texture.js';
import { Loader } from './Loader.js';

var TextureLoader = /*#__PURE__*/function (_Loader) {
  _inheritsLoose(TextureLoader, _Loader);

  function TextureLoader(manager) {
    return _Loader.call(this, manager) || this;
  }

  var _proto = TextureLoader.prototype;

  _proto.load = function load(url, onLoad, onProgress, onError) {
    var texture = new Texture();
    var loader = new ImageLoader(this.manager);
    loader.setCrossOrigin(this.crossOrigin);
    loader.setPath(this.path);
    loader.load(url, function (image) {
      texture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.

      var isJPEG = url.search(/\.jpe?g($|\?)/i) > 0 || url.search(/^data\:image\/jpeg/) === 0;
      texture.format = isJPEG ? RGBFormat : RGBAFormat;
      texture.needsUpdate = true;

      if (onLoad !== undefined) {
        onLoad(texture);
      }
    }, onProgress, onError);
    return texture;
  };

  return TextureLoader;
}(Loader);

export { TextureLoader };