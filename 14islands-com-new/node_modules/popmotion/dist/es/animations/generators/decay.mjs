function decay(_ref) {
  var _ref$velocity = _ref.velocity,
      velocity = _ref$velocity === void 0 ? 0 : _ref$velocity,
      _ref$from = _ref.from,
      from = _ref$from === void 0 ? 0 : _ref$from,
      _ref$power = _ref.power,
      power = _ref$power === void 0 ? 0.8 : _ref$power,
      _ref$timeConstant = _ref.timeConstant,
      timeConstant = _ref$timeConstant === void 0 ? 350 : _ref$timeConstant,
      _ref$restDelta = _ref.restDelta,
      restDelta = _ref$restDelta === void 0 ? 0.5 : _ref$restDelta,
      modifyTarget = _ref.modifyTarget;
  var state = {
    done: false,
    value: from
  };
  var amplitude = power * velocity;
  var ideal = from + amplitude;
  var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);
  if (target !== ideal) amplitude = target - from;
  return {
    next: function next(t) {
      var delta = -amplitude * Math.exp(-t / timeConstant);
      state.done = !(delta > restDelta || delta < -restDelta);
      state.value = state.done ? target : target + delta;
      return state;
    },
    flipTarget: function flipTarget() {}
  };
}

export { decay };