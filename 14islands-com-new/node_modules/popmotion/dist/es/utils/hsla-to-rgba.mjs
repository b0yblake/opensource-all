function hueToRgb(p, q, t) {
  if (t < 0) t += 1;
  if (t > 1) t -= 1;
  if (t < 1 / 6) return p + (q - p) * 6 * t;
  if (t < 1 / 2) return q;
  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
  return p;
}

function hslaToRgba(_ref) {
  var hue = _ref.hue,
      saturation = _ref.saturation,
      lightness = _ref.lightness,
      alpha = _ref.alpha;
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  var red = 0;
  var green = 0;
  var blue = 0;

  if (!saturation) {
    red = green = blue = lightness;
  } else {
    var q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    var p = 2 * lightness - q;
    red = hueToRgb(p, q, hue + 1 / 3);
    green = hueToRgb(p, q, hue);
    blue = hueToRgb(p, q, hue - 1 / 3);
  }

  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha
  };
}

export { hslaToRgba };