import _defineProperty from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/defineProperty.js";
import _slicedToArray from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";
import _createClass from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/createClass.js";
import _classCallCheck from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";
import _assertThisInitialized from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js";
import _inherits from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/inherits.js";
import _possibleConstructorReturn from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js";
import _getPrototypeOf from "/opt/build/repo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import * as THREE from 'three';

function shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {
  return /*#__PURE__*/function (_THREE$ShaderMaterial) {
    _inherits(_class, _THREE$ShaderMaterial);

    var _super = _createSuper(_class);

    function _class() {
      var _this;

      _classCallCheck(this, _class);

      var entries = Object.entries(uniforms); // Create unforms and shaders

      _this = _super.call(this, {
        uniforms: entries.reduce(function (acc, _ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              name = _ref2[0],
              value = _ref2[1];

          var uniform = THREE.UniformsUtils.clone({
            [name]: {
              value
            }
          });
          return _objectSpread(_objectSpread({}, acc), uniform);
        }, {}),
        vertexShader,
        fragmentShader
      }); // Create getter/setters

      entries.forEach(function (_ref3) {
        var _ref4 = _slicedToArray(_ref3, 1),
            name = _ref4[0];

        return Object.defineProperty(_assertThisInitialized(_this), name, {
          get: function get() {
            return _this.uniforms[name].value;
          },
          set: function set(v) {
            return _this.uniforms[name].value = v;
          }
        });
      });
      if (onInit) onInit(_assertThisInitialized(_this));
      return _this;
    }

    return _createClass(_class);
  }(THREE.ShaderMaterial);
}

export { shaderMaterial };