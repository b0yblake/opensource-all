var isElementHidden = function isElementHidden(node) {
  if (node.nodeType !== Node.ELEMENT_NODE) {
    return false;
  }

  var computedStyle = window.getComputedStyle(node, null);

  if (!computedStyle || !computedStyle.getPropertyValue) {
    return false;
  }

  return computedStyle.getPropertyValue('display') === 'none' || computedStyle.getPropertyValue('visibility') === 'hidden';
};

var isVisibleUncached = function isVisibleUncached(node, checkParent) {
  return !node || node === document || node && node.nodeType === Node.DOCUMENT_NODE || !isElementHidden(node) && checkParent(node.parentNode && node.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? node.parentNode.host : node.parentNode);
};

export var isVisibleCached = function isVisibleCached(visibilityCache, node) {
  var cached = visibilityCache.get(node);

  if (cached !== undefined) {
    return cached;
  }

  var result = isVisibleUncached(node, isVisibleCached.bind(undefined, visibilityCache));
  visibilityCache.set(node, result);
  return result;
};
export var notHiddenInput = function notHiddenInput(node) {
  return !((node.tagName === 'INPUT' || node.tagName === 'BUTTON') && (node.type === 'hidden' || node.disabled));
};
export var isGuard = function isGuard(node) {
  return Boolean(node && node.dataset && node.dataset.focusGuard);
};
export var isNotAGuard = function isNotAGuard(node) {
  return !isGuard(node);
};
export var isDefined = function isDefined(x) {
  return Boolean(x);
};